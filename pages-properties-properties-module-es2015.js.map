{"version":3,"sources":["./node_modules/agm-overlays/AgmOverlay.component.js","./node_modules/agm-overlays/AgmOverlays.module.js","./node_modules/agm-overlays/index.js","./node_modules/mat-video/fesm2015/mat-video.js","./src/app/pages/properties/map/map.component.html","./src/app/pages/properties/properties.component.html","./src/app/pages/properties/property/property.component.html","./src/app/pages/properties/map/map.component.scss","./src/app/pages/properties/map/map.component.ts","./src/app/pages/properties/properties.component.scss","./src/app/pages/properties/properties.component.ts","./src/app/pages/properties/properties.module.ts","./src/app/pages/properties/property/property.component.scss","./src/app/pages/properties/property/property.component.ts","./src/global.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,aAAa,mBAAO,CAAC,oDAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uDAAuD,uCAAuC,EAAE;AAChG;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,EAAE;AACtaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7Na;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,6BAA6B,mBAAO,CAAC,mFAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mFAAwB;AACzC,SAAS,mBAAO,CAAC,+EAAsB;;;;;;;;;;;;;ACNvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACT;AACsL;AAC1K;AACJ;AAC0C;AAChD;AACE;;AAEnD;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,gEAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mHAAmH;AAChI,aAAa,4HAA4H;AACzI,aAAa,oIAAoI;AACjJ,aAAa,mHAAmH;AAChI,aAAa,oHAAoH;AACjI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,+DAAS;AACb,IAAI,wDAAU,gBAAgB,wDAAU;AACxC;AACA,wDAAU;AACV,IAAI,+DAAS;AACb,IAAI,wDAAU,gBAAgB,wDAAU;AACxC;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,oBAAoB,wDAAU;AAC9B,IAAI,+DAAS;AACb;AACA,+NAA+N,OAAO,4pCAA4pC,yBAAyB;AAC35C,+BAA+B,iDAAiD,sBAAsB,kBAAkB,WAAW,YAAY,QAAQ,WAAW,aAAa,uBAAuB,mBAAmB,kBAAkB,OAAO,MAAM,eAAe,WAAW,UAAU,uEAAuE,OAAO,cAAc,WAAW,YAAY,UAAU,UAAU,WAAW,kBAAkB,OAAO,SAAS,WAAW,UAAU,0EAA0E,oBAAoB,YAAY,gBAAgB,aAAa,mBAAmB,mBAAmB,8BAA8B,YAAY,sBAAsB,2BAA2B,uBAAuB,yBAAyB,SAAS,mBAAmB,UAAU,8BAA8B,QAAQ,kBAAkB,UAAU,6CAA6C,YAAY,eAAe,YAAY,YAAY,eAAe,6BAA6B,kBAAkB,gBAAgB,0GAA0G,yBAAyB,6BAA6B,gBAAgB,kBAAkB,eAAe,cAAc,sBAAsB,oBAAoB,qBAAqB,mBAAmB,iBAAiB,cAAc,6BAA6B,qCAAqC,mCAAmC;AACx+C,KAAK;AACL,IAAI,wDAAU,uBAAuB,uDAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,0BAA0B,wDAAU;AACpC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,0DAAI;AACnB,IAAI,wDAAU;AACd,QAAQ,wDAAU;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,yBAAyB,wDAAU;AACnC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,0DAAI;AACnB,IAAI,wDAAU;AACd,QAAQ,wDAAU;AAClB;;AAEA;AACA;AACA,gFAAgF,kEAAS;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sBAAsB;AACpF;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK,aAAa,KAAK,GAAG,wBAAwB;AAC3F;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,gCAAgC,wDAAU;AAC1C,IAAI,+DAAS;AACb;AACA,syCAAsyC,cAAc;AACpzC,oBAAoB,kFAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,qEAAuB;AAChD,wBAAwB,WAAW,gCAAgC,kBAAkB,WAAW,WAAW,aAAa,yBAAyB,mCAAmC,kBAAkB,mCAAmC,kBAAkB,UAAU,6CAA6C,8BAA8B,mBAAmB,UAAU,8BAA8B;AAC3Y,KAAK;AACL,IAAI,qDAAO,IAAI,8DAAQ;AACvB,IAAI,qDAAO,IAAI,+DAAS;AACxB,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C,QAAQ,8DAAY;AACpB,QAAQ,+DAAiB;AACzB,QAAQ,gEAAc;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI,0DAAI;AACR;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wDAAU;AAC9B,IAAI,gEAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA,mBAAmB;AACnB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,6BAA6B,wDAAU;AACvC,IAAI,+DAAS;AACb;AACA;AACA,oBAAoB,cAAc,qBAAqB;AACvD,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,kCAAkC,wDAAU;AAC5C,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,+BAA+B,wDAAU;AACzC,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA,aAAa,mGAAmG;AAChH,aAAa,qGAAqG;AAClH,aAAa,8GAA8G;AAC3H,aAAa,qGAAqG;AAClH,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,yBAAyB,wDAAU;AACnC,IAAI,+DAAS;AACb;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU,uBAAuB,uDAAS;AAC9C;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,6BAA6B,wDAAU;AACvC,IAAI,+DAAS;AACb;AACA,uFAAuF,qBAAqB;AAC5G,2BAA2B,qBAAqB,eAAe,kBAAkB,mBAAmB;AACpG,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,aAAa,yHAAyH;AACtI,aAAa,2GAA2G;AACxH,aAAa,4HAA4H;AACzI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;A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","file":"pages-properties-properties-module-es2015.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"@agm/core\");\nvar AgmOverlay = (function () {\n    function AgmOverlay(_mapsWrapper, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._markerManager = _markerManager;\n        this.visible = true;\n        this.zIndex = 1;\n        this.markerClick = new core_1.EventEmitter();\n        this.openInfoWindow = true;\n        this.infoWindow = new core_1.QueryList();\n        this.draggable = false;\n        this._observableSubscriptions = [];\n    }\n    AgmOverlay.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        var iWins = this.template.nativeElement.getElementsByTagName('agm-info-window');\n        for (var x = iWins.length - 1; x >= 0; --x) {\n            iWins[x].parentNode.removeChild(iWins[x]);\n        }\n        this.load().then(function () {\n            _this.onChanges = _this.onChangesOverride;\n        });\n    };\n    AgmOverlay.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n    };\n    AgmOverlay.prototype.ngOnChanges = function (changes) {\n        this.onChanges(changes);\n    };\n    AgmOverlay.prototype.onChanges = function (changes) { };\n    AgmOverlay.prototype.onChangesOverride = function (changes) {\n        var _this = this;\n        if (changes.latitude || changes.longitude || changes.zIndex) {\n            this.overlayView.latitude = this.latitude;\n            this.overlayView.longitude = this.longitude;\n            this.overlayView.zIndex = this.zIndex;\n            this.destroy().then(function () { return _this.load(); });\n        }\n    };\n    AgmOverlay.prototype.ngOnDestroy = function () {\n        this.destroy();\n    };\n    AgmOverlay.prototype.destroy = function () {\n        this.destroyed = true;\n        var promise = this._markerManager.deleteMarker(this.overlayView);\n        if (this.overlayView) {\n            if (this.overlayView.div) {\n                this.overlayView.remove();\n            }\n            this.overlayView.setMap(null);\n        }\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        delete this.overlayView;\n        return promise;\n    };\n    AgmOverlay.prototype.handleInfoWindowUpdate = function () {\n        var _this = this;\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(function (iWin) {\n            iWin.hostMarker = _this.overlayView;\n        });\n    };\n    AgmOverlay.prototype.load = function () {\n        var _this = this;\n        return this._mapsWrapper.getNativeMap()\n            .then(function (map) {\n            var overlay = _this.getOverlay(map);\n            _this._markerManager.addMarker(overlay);\n            _this._addEventListeners();\n            return _this._markerManager.getNativeMarker(overlay);\n        })\n            .then(function (nativeMarker) {\n            var setMap = nativeMarker.setMap;\n            if (nativeMarker['map']) {\n                _this.overlayView.setMap(nativeMarker['map']);\n            }\n            nativeMarker.setMap = function (map) {\n                setMap.call(nativeMarker, map);\n                if (_this.overlayView) {\n                    _this.overlayView.setMap(map);\n                }\n            };\n        });\n    };\n    AgmOverlay.prototype.getOverlay = function (map) {\n        var _this = this;\n        this.overlayView = this.overlayView || new google.maps.OverlayView();\n        this.overlayView.iconUrl = \" \";\n        this.overlayView.latitude = this.latitude;\n        this.overlayView.longitude = this.longitude;\n        this.overlayView.visible = false;\n        if (this.bounds) {\n            this.overlayView.bounds_ = new google.maps.LatLngBounds(new google.maps.LatLng(this.latitude + this.bounds.x.latitude, this.longitude + this.bounds.x.longitude), new google.maps.LatLng(this.latitude + this.bounds.y.latitude, this.longitude + this.bounds.y.longitude));\n        }\n        var elm = this.template.nativeElement.children[0];\n        var restore = function (div) {\n            _this.template.nativeElement.appendChild(div);\n        };\n        this.overlayView.remove = function () {\n            if (!this.div)\n                return;\n            this.div.parentNode.removeChild(this.div);\n            restore(this.div);\n            delete this.div;\n        };\n        this.overlayView.getDiv = function () {\n            return this.div;\n        };\n        this.overlayView.draw = function () {\n            if (!this.div) {\n                this.div = elm;\n                var panes = this.getPanes();\n                if (!panes || !panes.overlayImage)\n                    return;\n                panes.overlayImage.appendChild(elm);\n            }\n            var latlng = new google.maps.LatLng(this.latitude, this.longitude);\n            var proj = this.getProjection();\n            if (!proj)\n                return;\n            var point = proj.fromLatLngToDivPixel(latlng);\n            if (point) {\n                elm.style.left = (point.x - 10) + 'px';\n                elm.style.top = (point.y - 20) + 'px';\n            }\n            if (this.bounds_) {\n                var proj_1 = this.getProjection();\n                var sw = proj_1.fromLatLngToDivPixel(this.bounds_.getSouthWest());\n                var ne = proj_1.fromLatLngToDivPixel(this.bounds_.getNorthEast());\n                this.div.style.left = sw.x + 'px';\n                this.div.style.top = ne.y + 'px';\n                this.div.children[0].style.width = ne.x - sw.x + 'px';\n                this.div.children[0].style.height = sw.y - ne.y + 'px';\n            }\n        };\n        elm.addEventListener(\"click\", function (event) {\n            _this.handleTap();\n            event.stopPropagation();\n        });\n        this.handleInfoWindowUpdate();\n        return this.overlayView;\n    };\n    AgmOverlay.prototype.handleTap = function () {\n        if (this.openInfoWindow) {\n            this.infoWindow.forEach(function (infoWindow) {\n                infoWindow.open();\n            });\n        }\n        this.markerClick.emit(null);\n    };\n    AgmOverlay.prototype._addEventListeners = function () {\n        var _this = this;\n        var eo = this._markerManager.createEventObservable('click', this.overlayView);\n        var cs = eo.subscribe(function () { return _this.handleTap(); });\n        this._observableSubscriptions.push(cs);\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], AgmOverlay.prototype, \"latitude\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], AgmOverlay.prototype, \"longitude\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AgmOverlay.prototype, \"visible\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], AgmOverlay.prototype, \"zIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], AgmOverlay.prototype, \"bounds\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], AgmOverlay.prototype, \"markerClick\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], AgmOverlay.prototype, \"openInfoWindow\", void 0);\n    __decorate([\n        core_1.ContentChildren(core_2.AgmInfoWindow),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], AgmOverlay.prototype, \"infoWindow\", void 0);\n    __decorate([\n        core_1.Input('markerDraggable'),\n        __metadata(\"design:type\", Boolean)\n    ], AgmOverlay.prototype, \"draggable\", void 0);\n    __decorate([\n        core_1.ViewChild('content', { read: core_1.ElementRef }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], AgmOverlay.prototype, \"template\", void 0);\n    AgmOverlay = __decorate([\n        core_1.Component({\n            selector: \"agm-overlay\",\n            template: '<div #content><div style=\"position:absolute\"><ng-content></ng-content></div></div>'\n        }),\n        __metadata(\"design:paramtypes\", [core_2.GoogleMapsAPIWrapper,\n            core_2.MarkerManager])\n    ], AgmOverlay);\n    return AgmOverlay;\n}());\nexports.AgmOverlay = AgmOverlay;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar AgmOverlay_component_1 = require(\"./AgmOverlay.component\");\nvar AgmOverlays = (function () {\n    function AgmOverlays() {\n    }\n    AgmOverlays = __decorate([\n        core_1.NgModule({\n            imports: [\n                common_1.CommonModule\n            ],\n            declarations: [AgmOverlay_component_1.AgmOverlay],\n            exports: [AgmOverlay_component_1.AgmOverlay],\n        })\n    ], AgmOverlays);\n    return AgmOverlays;\n}());\nexports.AgmOverlays = AgmOverlays;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./AgmOverlay.component\"));\n__export(require(\"./AgmOverlays.module\"));\n","import { __decorate, __metadata, __param } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, EventEmitter, ViewChild, ElementRef, Input, Output, Component, Renderer2, Directive, Host, ChangeDetectionStrategy, Optional, Attribute, ChangeDetectorRef, Pipe, HostListener, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR, MatSliderModule } from '@angular/material/slider';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\nlet EventService = class EventService {\r\n    constructor() { }\r\n    addEvents(renderer, events) {\r\n        for (const event of events)\r\n            event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\r\n    }\r\n    removeEvents(events) {\r\n        for (const event of events)\r\n            if (event.dispose)\r\n                event.dispose();\r\n    }\r\n};\r\nEventService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [])\r\n], EventService);\n\nlet MatVideoComponent = class MatVideoComponent {\r\n    constructor(renderer, evt) {\r\n        this.renderer = renderer;\r\n        this.evt = evt;\r\n        this.src = null;\r\n        this.title = null;\r\n        this.autoplay = false;\r\n        this.preload = true;\r\n        this.loop = false;\r\n        this.quality = true;\r\n        this.fullscreen = true;\r\n        this.showFrameByFrame = false;\r\n        this.fps = 29.97;\r\n        this.download = false;\r\n        this.color = 'primary';\r\n        this.spinner = 'spin';\r\n        this.poster = null;\r\n        this.keyboard = true;\r\n        this.overlay = null;\r\n        this.muted = false;\r\n        this.mutedChange = new EventEmitter();\r\n        this.timeChange = new EventEmitter();\r\n        this.playing = false;\r\n        this.isFullscreen = false;\r\n        this.videoLoaded = false;\r\n        this.isMouseMoving = false;\r\n        this.isMouseMovingTimeout = 2000;\r\n    }\r\n    get time() {\r\n        return this.getVideoTag().currentTime;\r\n    }\r\n    set time(val) {\r\n        const video = this.getVideoTag();\r\n        if (video && val) {\r\n            if (val > video.duration) {\r\n                val = video.duration;\r\n            }\r\n            if (val < 0) {\r\n                val = 0;\r\n            }\r\n            if (val !== video.currentTime) {\r\n                video.currentTime = val;\r\n            }\r\n            if (this.lastTime !== video.currentTime) {\r\n                setTimeout(() => this.timeChange.emit(video.currentTime), 0);\r\n                this.lastTime = video.currentTime;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.events = [\r\n            { element: this.video.nativeElement, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video.nativeElement, name: 'loadedmetadata', callback: event => this.evLoadedMetadata(event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'error', callback: event => console.error('Unhandled Video Error', event), dispose: null },\r\n            { element: this.video.nativeElement, name: 'contextmenu', callback: event => event.preventDefault(), dispose: null },\r\n            { element: this.video.nativeElement, name: 'timeupdate', callback: event => this.evTimeUpdate(event), dispose: null },\r\n            { element: this.player.nativeElement, name: 'mousemove', callback: event => this.evMouseMove(event), dispose: null }\r\n        ];\r\n        this.video.nativeElement.onloadeddata = () => this.videoLoaded = true;\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n    ngOnDestroy() {\r\n        this.video.nativeElement.onloadeddata = null;\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n    load() {\r\n        if (this.video && this.video.nativeElement)\r\n            this.video.nativeElement.load();\r\n    }\r\n    getVideoTag() {\r\n        return this.video && this.video.nativeElement ? this.video.nativeElement : null;\r\n    }\r\n    evLoadedMetadata(event) {\r\n        this.videoWidth = this.video.nativeElement.videoWidth;\r\n        this.videoHeight = this.video.nativeElement.videoHeight;\r\n        this.videoLoaded = true;\r\n    }\r\n    evMouseMove(event) {\r\n        this.isMouseMoving = true;\r\n        clearTimeout(this.isMouseMovingTimer);\r\n        this.isMouseMovingTimer = setTimeout(() => {\r\n            this.isMouseMoving = false;\r\n        }, this.isMouseMovingTimeout);\r\n    }\r\n    evTimeUpdate(event) {\r\n        this.time = this.getVideoTag().currentTime;\r\n    }\r\n    getOverlayClass(activeClass, inactiveClass) {\r\n        if (this.overlay === null) {\r\n            return (!this.playing || this.isMouseMoving) ? activeClass : inactiveClass;\r\n        }\r\n        else {\r\n            return this.overlay ? activeClass : inactiveClass;\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('player'),\r\n    __metadata(\"design:type\", ElementRef)\r\n], MatVideoComponent.prototype, \"player\", void 0);\r\n__decorate([\r\n    ViewChild('video'),\r\n    __metadata(\"design:type\", ElementRef)\r\n], MatVideoComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoComponent.prototype, \"src\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoComponent.prototype, \"title\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"autoplay\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"preload\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"loop\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"quality\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"fullscreen\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"showFrameByFrame\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatVideoComponent.prototype, \"fps\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"download\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoComponent.prototype, \"color\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoComponent.prototype, \"spinner\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoComponent.prototype, \"poster\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"keyboard\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"overlay\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVideoComponent.prototype, \"muted\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatVideoComponent.prototype, \"mutedChange\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], MatVideoComponent.prototype, \"time\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatVideoComponent.prototype, \"timeChange\", void 0);\r\nMatVideoComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-video',\r\n        template: \"<div #player class=\\\"videoplayer\\\" [ngClass]=\\\"getOverlayClass('show-mouse', 'hide-mouse')\\\">\\r\\n    <div class=\\\"header\\\" *ngIf=\\\"title\\\" [ngClass]=\\\"getOverlayClass('visible', 'hidden')\\\">\\r\\n        {{title}}\\r\\n    </div>\\r\\n\\r\\n    <video #video class=\\\"video\\\" [attr.src]=\\\"src ? src : null\\\" [attr.autoplay]=\\\"autoplay ? true : null\\\"\\r\\n        [preload]=\\\"preload ? 'auto' : 'metadata'\\\" [attr.poster]=\\\"poster ? poster : null\\\"\\r\\n        [attr.loop]=\\\"loop ? loop : null\\\">\\r\\n        <ng-content select=\\\"source\\\"></ng-content>\\r\\n        <ng-content select=\\\"track\\\"></ng-content>\\r\\n        This browser does not support HTML5 video.\\r\\n    </video>\\r\\n\\r\\n    <div class=\\\"controls\\\" *ngIf=\\\"videoLoaded\\\" [ngClass]=\\\"getOverlayClass('visible', 'hidden')\\\">\\r\\n        <div class=\\\"progress\\\">\\r\\n            <mat-seek-progress-control [color]=\\\"color\\\" [video]=\\\"video\\\"></mat-seek-progress-control>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"menu\\\">\\r\\n            <div class=\\\"left\\\">\\r\\n                <mat-play-button (playChanged)=\\\"playing = $event\\\" [video]=\\\"video\\\" [keyboard]=\\\"keyboard\\\">\\r\\n                </mat-play-button>\\r\\n\\r\\n                <mat-frame-by-frame-control *ngIf=\\\"showFrameByFrame\\\" [video]=\\\"video\\\" [fps]=\\\"fps\\\"></mat-frame-by-frame-control>\\r\\n\\r\\n                <mat-volume-control [muted]=\\\"muted\\\" (mutedChanged)=\\\"muted = $event; mutedChange.emit(muted);\\\"\\r\\n                    [color]=\\\"color\\\" [video]=\\\"video\\\" [keyboard]=\\\"keyboard\\\">\\r\\n                </mat-volume-control>\\r\\n\\r\\n                <mat-time-control [video]=\\\"video\\\"></mat-time-control>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"right\\\">\\r\\n                <mat-quality-control *ngIf=\\\"quality\\\" [video]=\\\"video\\\"></mat-quality-control>\\r\\n\\r\\n                <mat-download-button *ngIf=\\\"download\\\" [title]=\\\"title\\\" [video]=\\\"video\\\"></mat-download-button>\\r\\n\\r\\n                <mat-fullscreen-button *ngIf=\\\"fullscreen\\\" (fullscreenChanged)=\\\"isFullscreen = $event\\\" [player]=\\\"player\\\"\\r\\n                    [keyboard]=\\\"keyboard\\\"></mat-fullscreen-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <mat-video-spinner [spinner]=\\\"spinner\\\" [video]=\\\"video\\\"></mat-video-spinner>\\r\\n</div>\\r\\n\",\r\n        styles: [\".videoplayer{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;background-color:#000;position:relative;width:100%;height:100%}.header{color:#fff;display:flex;justify-content:center;align-items:center;position:absolute;left:0;top:0;padding:14px 0;width:100%;z-index:1;background-image:linear-gradient(to top,rgba(0,0,0,0),rgba(0,0,0,.65))}.video{display:block;width:100%;height:100%;z-index:0}.controls{color:#fff;position:absolute;left:0;bottom:0;width:100%;z-index:1;background-image:linear-gradient(to bottom,rgba(0,0,0,0),rgba(0,0,0,.65))}.controls .progress{height:26px}.controls .menu{display:flex;align-items:center;flex-direction:row;justify-content:space-between;height:48px}.controls .menu .left{justify-content:flex-start}.controls .menu .right{justify-content:flex-end}.visible{visibility:visible;opacity:1;transition:opacity .5s linear}.hidden{visibility:hidden;opacity:0;transition:visibility .5s,opacity .5s linear}.show-mouse{cursor:default}.hide-mouse{cursor:none}\", \"@font-face{font-family:'Material Icons';font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v36/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format('woff2')}::ng-deep.material-icons{font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;font-feature-settings:'liga';-webkit-font-feature-settings:'liga';-webkit-font-smoothing:antialiased}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        EventService])\r\n], MatVideoComponent);\n\nlet MatVideoSourceDirective = class MatVideoSourceDirective {\r\n    constructor(matVideoComponent, el) {\r\n        this.matVideoComponent = matVideoComponent;\r\n        this.el = el;\r\n        this.src = null;\r\n        this.type = null;\r\n        this.init = true;\r\n        this.video = matVideoComponent;\r\n        this.source = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.source.src = this.src;\r\n        this.source.type = this.type;\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoSourceDirective.prototype, \"src\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoSourceDirective.prototype, \"type\", void 0);\r\nMatVideoSourceDirective = __decorate([\r\n    Directive({\r\n        selector: '[matVideoSource]'\r\n    }),\r\n    __param(0, Host()),\r\n    __metadata(\"design:paramtypes\", [MatVideoComponent,\r\n        ElementRef])\r\n], MatVideoSourceDirective);\n\nlet MatVideoTrackDirective = class MatVideoTrackDirective {\r\n    constructor(matVideoComponent, el) {\r\n        this.matVideoComponent = matVideoComponent;\r\n        this.el = el;\r\n        this.src = null;\r\n        this.kind = null;\r\n        this.srclang = null;\r\n        this.label = null;\r\n        this.init = true;\r\n        this.video = matVideoComponent;\r\n        this.track = el.nativeElement;\r\n        this.init = false;\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.track.src = this.src;\r\n        this.track.kind = this.kind;\r\n        this.track.srclang = this.srclang;\r\n        this.track.label = this.label;\r\n        if (!this.init)\r\n            this.video.load();\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoTrackDirective.prototype, \"src\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoTrackDirective.prototype, \"kind\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoTrackDirective.prototype, \"srclang\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoTrackDirective.prototype, \"label\", void 0);\r\nMatVideoTrackDirective = __decorate([\r\n    Directive({\r\n        selector: '[matVideoTrack]'\r\n    }),\r\n    __param(0, Host()),\r\n    __metadata(\"design:paramtypes\", [MatVideoComponent,\r\n        ElementRef])\r\n], MatVideoTrackDirective);\n\n/** Counter used to generate unique IDs for progress bars. */\r\nlet sliderprogressbarId = 0;\r\nlet MatSliderProgressBarComponent = class MatSliderProgressBarComponent extends MatSlider {\r\n    constructor(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex) {\r\n        super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\r\n        this.mode = 'buffer';\r\n        this.value = 0;\r\n        this._bufferValue = 0;\r\n        /** The id of the progress bar. */\r\n        this.sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n    }\r\n    /** Buffer value of the progress bar. Defaults to zero. */\r\n    get bufferValue() { return this._bufferValue; }\r\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\r\n    /** CSS styles for the track fill element. */\r\n    get _trackBufferStyles() {\r\n        if (this.mode === 'buffer') {\r\n            const axis = this.vertical ? 'Y' : 'X';\r\n            return {\r\n                'transform': `translate${axis}(0px) scale${axis}(${this._bufferValue / 100})`\r\n            };\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatSliderProgressBarComponent.prototype, \"mode\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatSliderProgressBarComponent.prototype, \"value\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number),\r\n    __metadata(\"design:paramtypes\", [Number])\r\n], MatSliderProgressBarComponent.prototype, \"bufferValue\", null);\r\nMatSliderProgressBarComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-slider-progress-bar',\r\n        template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\r\\n    <div class=\\\"mat-slider-track-wrapper\\\">\\r\\n        <svg width=\\\"100%\\\" height=\\\"2\\\" focusable=\\\"false\\\" class=\\\"mat-slider-progress-background\\\">\\r\\n            <defs>\\r\\n                <pattern [id]=\\\"sliderprogressbarId\\\" x=\\\"2.5\\\" y=\\\"0\\\" width=\\\"5\\\" height=\\\"2.5\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                    <circle cx=\\\"1.25\\\" cy=\\\"1.25\\\" r=\\\"1.25\\\" />\\r\\n                </pattern>\\r\\n            </defs>\\r\\n            <rect [attr.fill]=\\\"'url(#' + sliderprogressbarId + ')'\\\" width=\\\"100%\\\" height=\\\"100%\\\" />\\r\\n        </svg>\\r\\n        <div class=\\\"mat-slider-track-fill mat-slider-track-buffer\\\" [ngStyle]=\\\"_trackBufferStyles\\\"></div>\\r\\n        <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\r\\n        <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\r\\n        <div class=\\\"mat-slider-focus-ring\\\"></div>\\r\\n        <div class=\\\"mat-slider-thumb\\\"></div>\\r\\n        <div class=\\\"mat-slider-thumb-label\\\">\\r\\n            <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\",\r\n        providers: [MAT_SLIDER_VALUE_ACCESSOR],\r\n        host: {\r\n            '(focus)': '_onFocus()',\r\n            '(blur)': '_onBlur()',\r\n            '(click)': 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null',\r\n            '(mousedown)': 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null',\r\n            '(keydown)': '_onKeydown($event)',\r\n            '(keyup)': '_onKeyup()',\r\n            '(mouseenter)': '_onMouseenter()',\r\n            '(slide)': '_onSlide($event)',\r\n            '(slideend)': '_onSlideEnd()',\r\n            '(slidestart)': '_onSlideStart($event)',\r\n            'class': 'mat-slider',\r\n            'role': 'slider',\r\n            '[tabIndex]': 'tabIndex',\r\n            '[attr.aria-disabled]': 'disabled',\r\n            '[attr.aria-valuemax]': 'max',\r\n            '[attr.aria-valuemin]': 'min',\r\n            '[attr.aria-valuenow]': 'value',\r\n            '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n            '[class.mat-slider-disabled]': 'disabled',\r\n            '[class.mat-slider-has-ticks]': 'tickInterval',\r\n            '[class.mat-slider-horizontal]': '!vertical',\r\n            '[class.mat-slider-axis-inverted]': '_invertAxis',\r\n            '[class.mat-slider-sliding]': '_isSliding',\r\n            '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\r\n            '[class.mat-slider-vertical]': 'vertical',\r\n            '[class.mat-slider-min-value]': '_isMinValue',\r\n            '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\r\n        },\r\n        inputs: ['disabled', 'color', 'tabIndex'],\r\n        changeDetection: ChangeDetectionStrategy.OnPush,\r\n        styles: [\":host{width:100%}.mat-slider-progress-background{position:absolute;height:2px;width:100%;fill:#d3d3d3}.mat-slider-track-buffer{background-color:#d3d3d3!important}.mat-slider-thumb{border-color:transparent!important;visibility:hidden;opacity:0;transition:visibility .2s,opacity .2s linear}:host:hover .mat-slider-thumb{visibility:visible;opacity:1;transition:opacity .2s linear}\"]\r\n    }),\r\n    __param(3, Optional()),\r\n    __param(4, Attribute('tabindex')),\r\n    __metadata(\"design:paramtypes\", [ElementRef,\r\n        FocusMonitor,\r\n        ChangeDetectorRef,\r\n        Directionality, String])\r\n], MatSliderProgressBarComponent);\r\n/** Clamps a value to be between two numbers, by default 0 and 100. */\r\nfunction clamp(v, min = 0, max = 100) {\r\n    return Math.max(min, Math.min(max, v));\r\n}\n\nlet SecondsToTimePipe = class SecondsToTimePipe {\r\n    constructor() {\r\n        this.times = {\r\n            year: 31557600,\r\n            month: 2629746,\r\n            day: 86400,\r\n            hour: 3600,\r\n        };\r\n    }\r\n    transform(seconds) {\r\n        if (!seconds)\r\n            return '0:00';\r\n        else {\r\n            let time_string = '';\r\n            for (const key in this.times) {\r\n                if (Math.floor(seconds / this.times[key]) > 0) {\r\n                    time_string += Math.floor(seconds / this.times[key]).toString() + ':';\r\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\r\n                }\r\n            }\r\n            time_string += Math.floor(seconds / 60).toString() + ':';\r\n            seconds = seconds - 60 * Math.floor(seconds / 60);\r\n            if (Math.floor(seconds) < 10)\r\n                time_string += '0';\r\n            time_string += Math.floor(seconds).toString();\r\n            return time_string;\r\n        }\r\n    }\r\n};\r\nSecondsToTimePipe = __decorate([\r\n    Pipe({\r\n        name: 'secondsToTime'\r\n    })\r\n], SecondsToTimePipe);\n\nlet FullscreenService = class FullscreenService {\r\n    constructor() {\r\n        this.fnMap = [\r\n            // Object keys\r\n            [\r\n                'requestFullscreen',\r\n                'exitFullscreen',\r\n                'fullscreenElement',\r\n                'fullscreenEnabled',\r\n                'fullscreenchange',\r\n                'fullscreenerror'\r\n            ],\r\n            // New WebKit\r\n            [\r\n                'webkitRequestFullscreen',\r\n                'webkitExitFullscreen',\r\n                'webkitFullscreenElement',\r\n                'webkitFullscreenEnabled',\r\n                'webkitfullscreenchange',\r\n                'webkitfullscreenerror'\r\n            ],\r\n            // Old WebKit (Safari 5.1)\r\n            [\r\n                'webkitRequestFullScreen',\r\n                'webkitCancelFullScreen',\r\n                'webkitCurrentFullScreenElement',\r\n                'webkitCancelFullScreen',\r\n                'webkitfullscreenchange',\r\n                'webkitfullscreenerror'\r\n            ],\r\n            // Mozilla\r\n            [\r\n                'mozRequestFullScreen',\r\n                'mozCancelFullScreen',\r\n                'mozFullScreenElement',\r\n                'mozFullScreenEnabled',\r\n                'mozfullscreenchange',\r\n                'mozfullscreenerror'\r\n            ],\r\n            // MS\r\n            [\r\n                'msRequestFullscreen',\r\n                'msExitFullscreen',\r\n                'msFullscreenElement',\r\n                'msFullscreenEnabled',\r\n                'MSFullscreenChange',\r\n                'MSFullscreenError'\r\n            ]\r\n        ];\r\n        this.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\r\n        const ret = {};\r\n        let val;\r\n        for (let i = 0; i < this.fnMap.length; i++) {\r\n            val = this.fnMap[i];\r\n            if (val && val[1] in document) {\r\n                for (i = 0; i < val.length; i++) {\r\n                    // Map everything to the first list of keys\r\n                    ret[this.fnMap[0][i].toString()] = val[i];\r\n                }\r\n                this.fn = ret;\r\n            }\r\n        }\r\n    }\r\n    request(elem) {\r\n        const request = this.fn.requestFullscreen;\r\n        elem = elem || document.documentElement;\r\n        // Work around Safari 5.1 bug: reports support for\r\n        // keyboard in fullscreen even though it doesn't.\r\n        // Browser sniffing, since the alternative with\r\n        // setTimeout is even worse.\r\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\r\n            elem[request]();\r\n        }\r\n        else {\r\n            elem[request](this.keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\r\n        }\r\n    }\r\n    exit() {\r\n        document[this.fn.exitFullscreen]();\r\n    }\r\n    toggle(elem) {\r\n        if (this.isFullscreen()) {\r\n            this.exit();\r\n        }\r\n        else {\r\n            this.request(elem);\r\n        }\r\n    }\r\n    onChange(callback) {\r\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\r\n    }\r\n    onError(callback) {\r\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\r\n    }\r\n    isFullscreen() {\r\n        return Boolean(document[this.fn.fullscreenElement]);\r\n    }\r\n    isEnabled() {\r\n        // Coerce to boolean in case of old WebKit\r\n        return Boolean(document[this.fn.fullscreenEnabled]);\r\n    }\r\n    getElement() {\r\n        return document[this.fn.fullscreenElement];\r\n    }\r\n};\r\nFullscreenService = __decorate([\r\n    Injectable(),\r\n    __metadata(\"design:paramtypes\", [])\r\n], FullscreenService);\n\nlet MatDownloadButtonComponent = class MatDownloadButtonComponent {\r\n    constructor() { }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatDownloadButtonComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatDownloadButtonComponent.prototype, \"title\", void 0);\r\nMatDownloadButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-download-button',\r\n        template: \"<a mat-icon-button [href]=\\\"video?.currentSrc\\\" [download]=\\\"title\\\">\\r\\n  <mat-icon>file_download</mat-icon>\\r\\n</a>\",\r\n        styles: [\"a{color:inherit;text-decoration:none}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], MatDownloadButtonComponent);\n\nlet MatFrameByFrameControlComponent = class MatFrameByFrameControlComponent {\r\n    constructor() {\r\n        this.fps = 29.97;\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    seekFrames(nbFrames) {\r\n        if (!this.video.paused) {\r\n            this.video.pause();\r\n        }\r\n        const currentFrames = this.video.currentTime * this.fps;\r\n        const newPos = ((currentFrames + nbFrames) / this.fps) + 0.00001;\r\n        this.video.currentTime = newPos;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatFrameByFrameControlComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatFrameByFrameControlComponent.prototype, \"fps\", void 0);\r\nMatFrameByFrameControlComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-frame-by-frame-control',\r\n        template: \"<button mat-icon-button (click)=\\\"seekFrames(-5)\\\">\\r\\n    <mat-icon>skip_previous</mat-icon>\\r\\n</button>\\r\\n\\r\\n<button mat-icon-button (click)=\\\"seekFrames(-1)\\\">\\r\\n    <mat-icon>arrow_left</mat-icon>\\r\\n</button>\\r\\n\\r\\n<button mat-icon-button (click)=\\\"seekFrames(1)\\\">\\r\\n    <mat-icon>arrow_right</mat-icon>\\r\\n</button>\\r\\n\\r\\n<button mat-icon-button (click)=\\\"seekFrames(5)\\\">\\r\\n    <mat-icon>skip_next</mat-icon>\\r\\n</button>\",\r\n        styles: [\"\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], MatFrameByFrameControlComponent);\n\nlet MatFullscreenButtonComponent = class MatFullscreenButtonComponent {\r\n    constructor(fscreen, evt) {\r\n        this.fscreen = fscreen;\r\n        this.evt = evt;\r\n        this.canFullscreen = false;\r\n        this.fullscreen = false;\r\n        this.fullscreenChanged = new EventEmitter();\r\n        this.keyboard = true;\r\n    }\r\n    ngOnInit() {\r\n        if (this.fscreen.isEnabled())\r\n            this.canFullscreen = true;\r\n        this.fscreen.onChange(event => this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false));\r\n    }\r\n    setFullscreen(value) {\r\n        if (this.canFullscreen && this.fullscreen !== value)\r\n            this.toggleFullscreen();\r\n    }\r\n    toggleFullscreen() {\r\n        this.fullscreen = !this.fullscreen;\r\n        this.updateFullscreen();\r\n    }\r\n    updateFullscreen() {\r\n        this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\r\n        this.fullscreenChanged.emit(this.fullscreen);\r\n    }\r\n    onChangesFullscreen(value) {\r\n        this.fullscreen = value;\r\n        this.fullscreenChanged.emit(this.fullscreen);\r\n    }\r\n    onFullscreenKey(event) {\r\n        if (this.keyboard) {\r\n            this.toggleFullscreen();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatFullscreenButtonComponent.prototype, \"player\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatFullscreenButtonComponent.prototype, \"fullscreen\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatFullscreenButtonComponent.prototype, \"fullscreenChanged\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatFullscreenButtonComponent.prototype, \"keyboard\", void 0);\r\n__decorate([\r\n    HostListener('document:keyup.f', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MatFullscreenButtonComponent.prototype, \"onFullscreenKey\", null);\r\nMatFullscreenButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-fullscreen-button',\r\n        template: \"<button mat-icon-button [disabled]=\\\"!canFullscreen\\\" (click)=\\\"toggleFullscreen()\\\">\\r\\n  <mat-icon *ngIf=\\\"!fullscreen\\\">fullscreen</mat-icon>\\r\\n  <mat-icon *ngIf=\\\"fullscreen\\\">fullscreen_exit</mat-icon>\\r\\n</button>\",\r\n        styles: [\"\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [FullscreenService,\r\n        EventService])\r\n], MatFullscreenButtonComponent);\n\nlet MatPlayButtonComponent = class MatPlayButtonComponent {\r\n    constructor(renderer, evt) {\r\n        this.renderer = renderer;\r\n        this.evt = evt;\r\n        this.play = false;\r\n        this.playChanged = new EventEmitter();\r\n        this.keyboard = true;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.events = [\r\n            { element: this.video, name: 'play', callback: event => this.setVideoPlayback(true), dispose: null },\r\n            { element: this.video, name: 'pause', callback: event => this.setVideoPlayback(false), dispose: null },\r\n            { element: this.video, name: 'durationchange', callback: event => this.setVideoPlayback(false), dispose: null },\r\n            { element: this.video, name: 'ended', callback: event => this.setVideoPlayback(false), dispose: null },\r\n            { element: this.video, name: 'click', callback: event => this.toggleVideoPlayback(), dispose: null }\r\n        ];\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n    ngOnDestroy() {\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n    setVideoPlayback(value) {\r\n        if (this.play !== value)\r\n            this.toggleVideoPlayback();\r\n    }\r\n    toggleVideoPlayback() {\r\n        this.play = !this.play;\r\n        this.updateVideoPlayback();\r\n    }\r\n    updateVideoPlayback() {\r\n        this.play ? this.video.play() : this.video.pause();\r\n        this.playChanged.emit(this.play);\r\n    }\r\n    onPlayKey(event) {\r\n        if (this.keyboard) {\r\n            this.toggleVideoPlayback();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatPlayButtonComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatPlayButtonComponent.prototype, \"play\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatPlayButtonComponent.prototype, \"playChanged\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatPlayButtonComponent.prototype, \"keyboard\", void 0);\r\n__decorate([\r\n    HostListener('document:keyup.space', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MatPlayButtonComponent.prototype, \"onPlayKey\", null);\r\nMatPlayButtonComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-play-button',\r\n        template: \"<button mat-icon-button (click)=\\\"toggleVideoPlayback()\\\">\\r\\n  <mat-icon *ngIf=\\\"!play\\\">play_arrow</mat-icon>\\r\\n  <mat-icon *ngIf=\\\"play\\\">pause</mat-icon>\\r\\n</button>\",\r\n        styles: [\"\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        EventService])\r\n], MatPlayButtonComponent);\n\nlet MatQualityControlComponent = class MatQualityControlComponent {\r\n    constructor() { }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatQualityControlComponent.prototype, \"video\", void 0);\r\nMatQualityControlComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-quality-control',\r\n        template: \"<div *ngIf=\\\"video && video.videoHeight\\\" class=\\\"quality\\\">\\r\\n  {{ video.videoHeight }}p\\r\\n</div>\",\r\n        styles: [\".quality{display:inline-block;font-size:12px;padding-left:12px;padding-right:12px}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], MatQualityControlComponent);\n\nlet MatSeekProgressControlComponent = class MatSeekProgressControlComponent {\r\n    constructor(renderer, evt) {\r\n        this.renderer = renderer;\r\n        this.evt = evt;\r\n        this.curTimePercent = 0;\r\n        this.bufTimePercent = 0;\r\n        this.video = null;\r\n        this.color = 'primary';\r\n        this.currentTime = 0;\r\n        this.currentTimeChanged = new EventEmitter();\r\n        this.bufferedTime = 0;\r\n        this.bufferedTimeChanged = new EventEmitter();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.events = [\r\n            { element: this.video, name: 'seeking', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n            { element: this.video, name: 'canplaythrough', callback: event => this.updateBufferedTime(), dispose: null },\r\n            { element: this.video, name: 'timeupdate', callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\r\n            { element: this.video, name: 'progress', callback: event => this.updateBufferedTime(), dispose: null }\r\n        ];\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n    ngOnDestroy() {\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n    seekVideo(value) {\r\n        const percentage = value / 100;\r\n        const newTime = this.video.duration * percentage;\r\n        this.video.currentTime = newTime;\r\n    }\r\n    updateCurrentTime(time) {\r\n        this.currentTime = time;\r\n        this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\r\n    }\r\n    updateBufferedTime() {\r\n        if (this.video.buffered.length > 0) {\r\n            let largestBufferValue = 0;\r\n            for (let i = 0; i < this.video.buffered.length; i++) {\r\n                const cur = this.video.currentTime;\r\n                const start = this.video.buffered.start(i);\r\n                const end = this.video.buffered.end(i);\r\n                if (start <= cur && end > cur && (end - start) > largestBufferValue)\r\n                    largestBufferValue = end;\r\n            }\r\n            this.bufferedTime = largestBufferValue;\r\n            this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\r\n        }\r\n    }\r\n    updateTime(emitter, time) {\r\n        emitter.emit(time);\r\n        return time / this.video.duration * 100;\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatSeekProgressControlComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatSeekProgressControlComponent.prototype, \"color\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatSeekProgressControlComponent.prototype, \"currentTime\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatSeekProgressControlComponent.prototype, \"currentTimeChanged\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatSeekProgressControlComponent.prototype, \"bufferedTime\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatSeekProgressControlComponent.prototype, \"bufferedTimeChanged\", void 0);\r\nMatSeekProgressControlComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-seek-progress-control',\r\n        template: \"<mat-slider-progress-bar [color]=\\\"color\\\" mode=\\\"buffer\\\" step=\\\"0.01\\\" [value]=\\\"curTimePercent\\\" [bufferValue]=\\\"bufTimePercent\\\"\\n  (input)=\\\"seekVideo($event.value)\\\"></mat-slider-progress-bar>\",\r\n        styles: [\"\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        EventService])\r\n], MatSeekProgressControlComponent);\n\nlet MatTimeControlComponent = class MatTimeControlComponent {\r\n    constructor() { }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatTimeControlComponent.prototype, \"video\", void 0);\r\nMatTimeControlComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-time-control',\r\n        template: \"<div class=\\\"playtime\\\">\\r\\n  {{ video?.currentTime | secondsToTime }} / {{ video?.duration | secondsToTime}}\\r\\n</div>\",\r\n        styles: [\".playtime{display:inline;font-size:12px}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], MatTimeControlComponent);\n\nlet MatVideoSpinnerComponent = class MatVideoSpinnerComponent {\r\n    constructor(renderer, evt) {\r\n        this.renderer = renderer;\r\n        this.evt = evt;\r\n        this.spinner = 'spin';\r\n        this.videoBuffering = false;\r\n        this.videoLoaded = false;\r\n        this.events = [];\r\n    }\r\n    ngAfterViewInit() {\r\n        this.events = [\r\n            { element: this.video, name: 'loadstart', callback: event => this.videoLoaded = false, dispose: null },\r\n            { element: this.video, name: 'loadedmetadata', callback: event => this.videoLoaded = true, dispose: null },\r\n            { element: this.video, name: 'canplay', callback: event => this.videoBuffering = false, dispose: null },\r\n            { element: this.video, name: 'waiting', callback: event => this.videoBuffering = true, dispose: null },\r\n            { element: this.video, name: 'durationchange', callback: event => this.videoBuffering = true, dispose: null }\r\n        ];\r\n        this.video.onloadeddata = () => this.videoLoaded = true;\r\n        this.evt.addEvents(this.renderer, this.events);\r\n    }\r\n    ngOnDestroy() {\r\n        this.video.onloadeddata = null;\r\n        this.evt.removeEvents(this.events);\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatVideoSpinnerComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVideoSpinnerComponent.prototype, \"spinner\", void 0);\r\nMatVideoSpinnerComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-video-spinner',\r\n        template: \"<div *ngIf=\\\"!videoLoaded || videoBuffering\\\" [class]=\\\"spinner\\\"></div>\",\r\n        styles: [\":host{position:absolute;left:calc(50% - 32px);top:calc(50% - 32px);z-index:1}\", \".spin{box-sizing:border-box;width:64px;height:64px;border-radius:100%;border:10px solid rgba(255,255,255,.2);border-top-color:#fff;-webkit-animation:1s linear infinite spin;animation:1s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\", \".dot{width:64px;height:64px;background-color:#fff;border-radius:100%;-webkit-animation:1s ease-in-out infinite dot;animation:1s ease-in-out infinite dot}@-webkit-keyframes dot{0%{-webkit-transform:scale(0)}100%{-webkit-transform:scale(1);opacity:0}}@keyframes dot{0%{-webkit-transform:scale(0);transform:scale(0)}100%{-webkit-transform:scale(1);transform:scale(1);opacity:0}}\", \".split-ring{display:inline-block;width:64px;height:64px}.split-ring:after{content:\\\" \\\";display:block;width:46px;height:46px;margin:1px;border-radius:50%;border:5px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s linear infinite split-ring;animation:1.2s linear infinite split-ring}@-webkit-keyframes split-ring{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes split-ring{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\", \".hourglass{display:inline-block;position:relative;width:64px;height:64px}.hourglass:after{content:\\\" \\\";display:block;border-radius:50%;width:0;height:0;margin:6px;box-sizing:border-box;border:26px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s infinite hourglass;animation:1.2s infinite hourglass}@-webkit-keyframes hourglass{0%{-webkit-transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg)}}@keyframes hourglass{0%{-webkit-transform:rotate(0);transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg);transform:rotate(720deg)}}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [Renderer2,\r\n        EventService])\r\n], MatVideoSpinnerComponent);\n\nlet MatVolumeControlComponent = class MatVolumeControlComponent {\r\n    constructor(evt) {\r\n        this.evt = evt;\r\n        this.video = null;\r\n        this.color = 'primary';\r\n        this.volume = 1;\r\n        this.volumeChanged = new EventEmitter();\r\n        this._muted = false;\r\n        this.mutedChanged = new EventEmitter();\r\n        this.keyboard = true;\r\n    }\r\n    get muted() { return this._muted; }\r\n    set muted(v) {\r\n        this._muted = v;\r\n        this.video.muted = this._muted;\r\n    }\r\n    setVolume(value) {\r\n        this.volume = value;\r\n        this.video.volume = this.volume;\r\n        this.volumeChanged.emit(this.volume);\r\n        if (this.volume > 0)\r\n            this.setMuted(false);\r\n    }\r\n    setMuted(value) {\r\n        if (this.muted !== value)\r\n            this.toggleMuted();\r\n    }\r\n    toggleMuted() {\r\n        this.muted = !this.muted;\r\n        this.updateMuted();\r\n    }\r\n    updateMuted() {\r\n        this.video.muted = this.muted;\r\n        this.mutedChanged.emit(this.muted);\r\n    }\r\n    onMuteKey(event) {\r\n        if (this.keyboard) {\r\n            this.toggleMuted();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", HTMLVideoElement)\r\n], MatVolumeControlComponent.prototype, \"video\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", String)\r\n], MatVolumeControlComponent.prototype, \"color\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Number)\r\n], MatVolumeControlComponent.prototype, \"volume\", void 0);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatVolumeControlComponent.prototype, \"volumeChanged\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean),\r\n    __metadata(\"design:paramtypes\", [Boolean])\r\n], MatVolumeControlComponent.prototype, \"muted\", null);\r\n__decorate([\r\n    Output(),\r\n    __metadata(\"design:type\", Object)\r\n], MatVolumeControlComponent.prototype, \"mutedChanged\", void 0);\r\n__decorate([\r\n    Input(),\r\n    __metadata(\"design:type\", Boolean)\r\n], MatVolumeControlComponent.prototype, \"keyboard\", void 0);\r\n__decorate([\r\n    HostListener('document:keyup.m', ['$event']),\r\n    __metadata(\"design:type\", Function),\r\n    __metadata(\"design:paramtypes\", [KeyboardEvent]),\r\n    __metadata(\"design:returntype\", void 0)\r\n], MatVolumeControlComponent.prototype, \"onMuteKey\", null);\r\nMatVolumeControlComponent = __decorate([\r\n    Component({\r\n        selector: 'mat-volume-control',\r\n        template: \"<div class=\\\"volume-control\\\">\\r\\n  <button mat-icon-button (click)=\\\"toggleMuted()\\\">\\r\\n    <mat-icon *ngIf=\\\"muted || volume === 0\\\">volume_off</mat-icon>\\r\\n    <mat-icon *ngIf=\\\"!muted && volume > 0 && volume < 0.25\\\">volume_mute</mat-icon>\\r\\n    <mat-icon *ngIf=\\\"!muted && volume >= 0.25 && volume < 0.5\\\">volume_down</mat-icon>\\r\\n    <mat-icon *ngIf=\\\"!muted && volume >= 0.5\\\">volume_up</mat-icon>\\r\\n  </button>\\r\\n  <mat-slider class=\\\"volume-slider\\\" [color]=\\\"color\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\" value=\\\"1\\\" (input)=\\\"setVolume($event.value)\\\">\\r\\n  </mat-slider>\\r\\n</div>\",\r\n        styles: [\".volume-control{display:inline}.volume-slider{margin-left:-15px}::ng-deep.mat-slider-thumb{border-color:transparent!important}::ng-deep.mat-slider-track-background{background-color:#d3d3d3!important;-webkit-transform:translateX(0)!important;transform:translateX(0)!important}.volume-control .volume-slider{visibility:hidden;opacity:0;min-width:0;width:0;transition:visibility .2s,opacity .2s linear,width .2s linear}.volume-control:hover .volume-slider{visibility:visible;opacity:1;min-width:90px;width:90px;transition:opacity .2s linear,width .2s linear,min-width .2s linear}\"]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [EventService])\r\n], MatVolumeControlComponent);\n\nlet MatVideoModule = class MatVideoModule {\r\n};\r\nMatVideoModule = __decorate([\r\n    NgModule({\r\n        declarations: [\r\n            SecondsToTimePipe,\r\n            MatVideoComponent,\r\n            MatSliderProgressBarComponent,\r\n            MatPlayButtonComponent,\r\n            MatVolumeControlComponent,\r\n            MatDownloadButtonComponent,\r\n            MatFullscreenButtonComponent,\r\n            MatTimeControlComponent,\r\n            MatQualityControlComponent,\r\n            MatVideoSpinnerComponent,\r\n            MatSeekProgressControlComponent,\r\n            MatVideoSourceDirective,\r\n            MatVideoTrackDirective,\r\n            MatFrameByFrameControlComponent\r\n        ],\r\n        imports: [\r\n            CommonModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n            MatSliderModule,\r\n        ],\r\n        exports: [\r\n            MatVideoComponent,\r\n            MatVideoSourceDirective,\r\n            MatVideoTrackDirective\r\n        ],\r\n        providers: [\r\n            FullscreenService,\r\n            EventService\r\n        ]\r\n    })\r\n], MatVideoModule);\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MatVideoModule, SecondsToTimePipe as ɵa, MatVideoComponent as ɵb, EventService as ɵc, MatSliderProgressBarComponent as ɵd, MatPlayButtonComponent as ɵe, MatVolumeControlComponent as ɵf, MatDownloadButtonComponent as ɵg, MatFullscreenButtonComponent as ɵh, FullscreenService as ɵi, MatTimeControlComponent as ɵj, MatQualityControlComponent as ɵk, MatVideoSpinnerComponent as ɵl, MatSeekProgressControlComponent as ɵm, MatVideoSourceDirective as ɵn, MatVideoTrackDirective as ɵo, MatFrameByFrameControlComponent as ɵp };\n//# sourceMappingURL=mat-video.js.map\n","module.exports = \"<div>\\r\\n    <!-- <agm-map [zoom]=\\\"12\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" (boundsChange)=\\\"doSomething2($event)\\\">\\r\\n        <agm-overlay *ngFor=\\\"let almacen of almacenes;let i=index\\\" [latitude]=\\\"almacen.latitudInstalacion\\\"\\r\\n            [longitude]=\\\"almacen.longitudInstalacion\\\">\\r\\n            <div class=\\\"block\\\">\\r\\n                <strong style=\\\"color:white;\\\">{{almacen.idInstalacion}}</strong>\\r\\n            </div>\\r\\n            <agm-info-window>Info Window {{i}}</agm-info-window>\\r\\n        </agm-overlay>\\r\\n    </agm-map> -->\\r\\n    <agm-map [(zoom)]=\\\"zoom\\\" [latitude]=\\\"lat\\\" (mapReady)=\\\"doSomething($event)\\\" (boundsChange)=\\\"doSomething2($event)\\\"\\r\\n        [longitude]=\\\"lng\\\">\\r\\n        <agm-marker *ngFor=\\\"let almacen of almacenes\\\"\\r\\n            (markerClick)=\\\"openWindow(almacen.idInstalacion)\\\"\\r\\n            [latitude]=\\\"almacen.latitudInstalacion\\\" [longitude]=\\\"almacen.longitudInstalacion\\\">\\r\\n            <div class=\\\"block\\\">\\r\\n                <strong style=\\\"color:white;\\\">{{almacen.idInstalacion}}</strong>\\r\\n            </div>\\r\\n            <agm-info-window style=\\\"max-width: 600px\\\" class=\\\"infoWindow\\\" [maxWidth]=\\\"300\\\"\\r\\n                [isOpen]=\\\"isInfoWindowOpen(almacen.idInstalacion)\\\" [disableAutoPan]=\\\"true\\\"\\r\\n                [zIndex]=\\\"almacen.idInstalacion\\\" [latitude]=\\\"almacen.latitudInstalacion\\\"\\r\\n                [longitude]=\\\"almacen.longitudInstalacion\\\">\\r\\n                <div class=\\\"card infoWindow\\\">\\r\\n                    <img src=\\\"https://source.unsplash.com/1600x900/?storage\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\r\\n                    <div class=\\\"card-body text-center\\\">\\r\\n                        <h3 class=\\\"card-title\\\">{{almacen.nombreInstalacion}}</h3>\\r\\n                        <div>\\r\\n                            <h5>\\r\\n                                <i class=\\\"fa fa-map-marker\\\"></i> {{almacen.direccionInstalacion}}\\r\\n                            </h5>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </agm-info-window>\\r\\n        </agm-marker>\\r\\n    </agm-map>\\r\\n    <button mat-raised-button (click)=\\\"enable()\\\" [(color)]=\\\"color\\\" id=\\\"scrollEnabling\\\" [ngClass]=\\\"{'enabled': search}\\\"\\r\\n        title=\\\"Enable or disable scrolling on map\\\">Buscar mientras navega</button>\\r\\n</div>\"","module.exports = \"<div id=\\\"mapa\\\" [ngClass]=\\\"{'show': showable}\\\">\\r\\n    <button mat-raised-button (click)=\\\"mapa()\\\" color=\\\"accent\\\" id=\\\"regresar\\\" [ngClass]=\\\"{'block': showable}\\\"\\r\\n        title=\\\"regresar\\\">Regresar</button>\\r\\n    <app-map></app-map>\\r\\n</div>\\r\\n<app-header-image [backgroundImage]=\\\"'assets/images/carousel/slide-3.jpg'\\\" [bgImageAnimate]=\\\"false\\\"\\r\\n    [contentOffsetToTop]=\\\"false\\\" [desc]=\\\"'“Home is where one starts from...” –T.S. Eliot'\\\" [contentMinHeight]=\\\"200\\\">\\r\\n</app-header-image>\\r\\n\\r\\n<div class=\\\"px-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n        <mat-sidenav-container class=\\\"all-properties mt-3\\\">\\r\\n            <mat-sidenav #sidenav [autoFocus]=\\\"false\\\" [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\"\\r\\n                class=\\\"search-sidenav\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)='mapa()'>Ver mapa</button>\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\">\\r\\n                    <button fxHide=\\\"false\\\" fxHide.gt-xs mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon color=\\\"accent\\\">close</mat-icon>\\r\\n                    </button>\\r\\n                    <app-properties-search [variant]=\\\"settings.searchPanelVariant\\\" [vertical]=\\\"true\\\"\\r\\n                        [searchOnBtnClick]=\\\"settings.searchOnBtnClick\\\" [removedSearchField]=\\\"removedSearchField\\\"\\r\\n                        (onSearchChange)=\\\"searchChanged($event)\\\" (onSearchClick)=\\\"searchClicked()\\\">\\r\\n                    </app-properties-search>\\r\\n                </mat-card>\\r\\n            </mat-sidenav>\\r\\n\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n\\r\\n                <div fxLayout=\\\"row wrap\\\" class=\\\"properties-wrapper mt-0\\\">\\r\\n\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-2 pb-2 pt-0\\\">\\r\\n                        <app-properties-toolbar [showSidenavToggle]=\\\"!sidenavOpen\\\" (onSidenavToggle)=\\\"sidenav.toggle()\\\"\\r\\n                            (onChangeCount)=\\\"changeCount($event)\\\" (onChangeSorting)=\\\"changeSorting($event)\\\"\\r\\n                            (onChangeViewType)=\\\"changeViewType($event)\\\">\\r\\n                        </app-properties-toolbar>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"p-2\\\">\\r\\n                        <mat-chip-list [ngClass]=\\\"(settings.rtl) ? 'ml-2' : 'mr-2'\\\">\\r\\n                            <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                                {{ pagination?.total }} found\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                        <app-properties-search-results-filters [searchFields]=\\\"searchFields\\\"\\r\\n                            (onRemoveSearchField)=\\\"removeSearchField($event)\\\">\\r\\n                        </app-properties-search-results-filters>\\r\\n                    </div>\\r\\n\\r\\n                    <!-- <div *ngFor=\\\"let property of properties\\\" [fxFlex]=\\\"(viewType=='grid') ? viewCol : 100\\\" class=\\\"item\\\">\\r\\n                        <app-property-item [property]=\\\"property\\\" [viewType]=\\\"viewType\\\" [viewColChanged]=\\\"viewCol\\\"\\r\\n                            [fullWidthPage]=\\\"false\\\"></app-property-item>\\r\\n                    </div> -->\\r\\n                    <div *ngFor=\\\"let almacen of almacenes\\\" [fxFlex]=\\\"(viewType=='grid') ? viewCol : 100\\\" class=\\\"item\\\">\\r\\n                        <app-almacen-item [almacen]=\\\"almacen\\\" [viewType]=\\\"viewType\\\" [viewColChanged]=\\\"viewCol\\\"\\r\\n                            [fullWidthPage]=\\\"false\\\"></app-almacen-item>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"properties?.length == 0\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\"\\r\\n                        [style.min-height.px]=\\\"200\\\">\\r\\n                        <mat-spinner *ngIf=\\\"!message\\\"></mat-spinner>\\r\\n                        <mat-chip-list *ngIf=\\\"message\\\">\\r\\n                            <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                                {{message}}\\r\\n                            </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"properties?.length > 0\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-2\\\">\\r\\n                        <mat-paginator [length]=\\\"pagination?.total\\\" [pageSize]=\\\"pagination?.perPage\\\"\\r\\n                            (page)=\\\"onPageChange($event)\\\" class=\\\"w-100 mat-elevation-z1\\\">\\r\\n                        </mat-paginator>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<app-clients></app-clients>\\r\\n\\r\\n<app-get-in-touch></app-get-in-touch>\"","module.exports = \"<div class=\\\"px-3\\\">     \\r\\n    <div class=\\\"theme-container\\\"> \\r\\n    \\r\\n        <mat-sidenav-container class=\\\"single-property mt-3\\\">\\r\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" position=\\\"end\\\" autoFocus=\\\"false\\\" (openedChange)=\\\"onOpenedChange()\\\">\\r\\n                <button fxHide=\\\"false\\\" fxHide.gt-sm=\\\"true\\\" mat-mini-fab color=\\\"warn\\\" class=\\\"close\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                    <mat-icon>close</mat-icon>\\r\\n                </button>\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\"> \\r\\n\\r\\n                    <div class=\\\"widget\\\"> \\r\\n                        <mat-card *ngIf=\\\"agent\\\">\\r\\n                            <img mat-card-image [src]=\\\"agent.image\\\" [alt]=\\\"agent.fullName\\\"> \\r\\n                            <mat-card-content>\\r\\n                                <h2 class=\\\"fw-600\\\">Agent {{agent.fullName}}</h2>\\r\\n                                <app-rating [ratingsCount]=\\\"agent.ratingsCount\\\" [ratingsValue]=\\\"agent.ratingsValue\\\"></app-rating>\\r\\n                                <p class=\\\"mt-3\\\">{{agent.desc}}</p>                                    \\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\" matTooltip=\\\"Organization\\\" matTooltipPosition=\\\"above\\\">business</mat-icon><span class=\\\"mx-2\\\">{{agent.organization}}</span></p>\\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\">email</mat-icon><span class=\\\"mx-2\\\">{{agent.email}}</span></p>\\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\">call</mat-icon><span class=\\\"mx-2\\\">{{agent.phone}}</span></p>\\r\\n                            </mat-card-content>\\r\\n                            <mat-divider></mat-divider>\\r\\n                            <mat-card-actions fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"text-muted\\\">\\r\\n                                    <a [href]=\\\"'https://www.facebook.com/'+agent.social.facebook\\\" target=\\\"blank\\\" class=\\\"social-icon\\\">\\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://twitter.com/'+agent.social.twitter\\\" target=\\\"blank\\\" class=\\\"social-icon\\\">\\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\\" />\\r\\n                                        </svg> \\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://www.linkedin.com/'+agent.social.linkedin\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                        <path d=\\\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H19M18.5,18.5V13.2A3.26,3.26 0 0,0 15.24,9.94C14.39,9.94 13.4,10.46 12.92,11.24V10.13H10.13V18.5H12.92V13.57C12.92,12.8 13.54,12.17 14.31,12.17A1.4,1.4 0 0,1 15.71,13.57V18.5H18.5M6.88,8.56A1.68,1.68 0 0,0 8.56,6.88C8.56,5.95 7.81,5.19 6.88,5.19A1.69,1.69 0 0,0 5.19,6.88C5.19,7.81 5.95,8.56 6.88,8.56M8.27,18.5V10.13H5.5V18.5H8.27Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://instagram.com/'+agent.social.instagram\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M7.8,2H16.2C19.4,2 22,4.6 22,7.8V16.2A5.8,5.8 0 0,1 16.2,22H7.8C4.6,22 2,19.4 2,16.2V7.8A5.8,5.8 0 0,1 7.8,2M7.6,4A3.6,3.6 0 0,0 4,7.6V16.4C4,18.39 5.61,20 7.6,20H16.4A3.6,3.6 0 0,0 20,16.4V7.6C20,5.61 18.39,4 16.4,4H7.6M17.25,5.5A1.25,1.25 0 0,1 18.5,6.75A1.25,1.25 0 0,1 17.25,8A1.25,1.25 0 0,1 16,6.75A1.25,1.25 0 0,1 17.25,5.5M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a> \\r\\n                                    <a [href]=\\\"agent.social.website\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>  \\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <a [routerLink]=\\\"['/agents', agent.id]\\\" mat-button color=\\\"primary\\\" class=\\\"uppercase\\\">View Profile</a>\\r\\n                                </div> \\r\\n                            </mat-card-actions>                              \\r\\n                        </mat-card>\\r\\n                    </div> \\r\\n                    \\r\\n                    <div class=\\\"widget\\\">\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Reply to the listing</h3>\\r\\n                        <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"onContactFormSubmit(contactForm.value)\\\">\\r\\n                            <p>Interested in renting or buying this property? Then send us an email.</p>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Name</mat-label>\\r\\n                                <input matInput placeholder=\\\"Your Name\\\" autocomplete=\\\"off\\\" formControlName=\\\"name\\\">\\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.name.errors?.required\\\">Name is required</mat-error>                   \\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>E-mail</mat-label> \\r\\n                                <input matInput placeholder=\\\"Your Email\\\" autocomplete=\\\"off\\\" formControlName=\\\"email\\\">\\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Phone</mat-label>\\r\\n                                <input matInput placeholder=\\\"Your Phone\\\" autocomplete=\\\"off\\\" formControlName=\\\"phone\\\" type=\\\"number\\\"> \\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.phone.errors?.required\\\">Phone is required</mat-error>                 \\r\\n                            </mat-form-field>\\r\\n\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Message</mat-label> \\r\\n                                <textarea matInput placeholder=\\\"Your Message\\\" formControlName=\\\"message\\\" rows=\\\"6\\\"></textarea> \\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.message.errors?.required\\\">Message is required</mat-error>\\r\\n                            </mat-form-field>  \\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Send Email</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                   \\r\\n                    <div class=\\\"widget\\\">\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Mortgage Calculator</h3>\\r\\n                        <form [formGroup]=\\\"mortgageForm\\\" (ngSubmit)=\\\"onMortgageFormSubmit(mortgageForm.value)\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Principal Amount</mat-label>\\r\\n                                <input matInput placeholder=\\\"$\\\" autocomplete=\\\"off\\\" formControlName=\\\"principalAmount\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Down Payment</mat-label>\\r\\n                                <input matInput placeholder=\\\"$\\\" autocomplete=\\\"off\\\" formControlName=\\\"downPayment\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Interest Rate</mat-label>\\r\\n                                <input matInput placeholder=\\\"%\\\" autocomplete=\\\"off\\\" formControlName=\\\"interestRate\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Period</mat-label>\\r\\n                                <input matInput placeholder=\\\"Number of Years\\\" autocomplete=\\\"off\\\" formControlName=\\\"period\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <p *ngIf=\\\"monthlyPayment\\\">Monthly Payment: <span class=\\\"mx-2 fw-500\\\">${{monthlyPayment}}</span></p>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Calculate Mortgage</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"column\\\" class=\\\"widget\\\">\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Featured Properties</h3>\\r\\n                        <div *ngFor=\\\"let prop of featuredProperties\\\" class=\\\"mb-3\\\">\\r\\n                            <app-property-item [property]=\\\"prop\\\" [viewType]=\\\"'grid'\\\"></app-property-item> \\r\\n                        </div> \\r\\n                    </div>\\r\\n                   \\r\\n                </mat-card>\\r\\n            </mat-sidenav>\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n                <mat-card fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\">             \\r\\n                    <div>\\r\\n                        <h2 class=\\\"uppercase\\\" ngClass.xs=\\\"text-center\\\">{{property?.title}}</h2>\\r\\n                        <p fxLayout=\\\"row\\\" fxLayoutAlign.xs=\\\"center\\\" class=\\\"address mb-0\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">location_on</mat-icon>\\r\\n                            <span>{{property?.formattedAddress}}</span>\\r\\n                        </p>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"column\\\" fxLayoutAlign.xs=\\\"center center\\\" class=\\\"mx-3\\\">                      \\r\\n                        <h2 *ngIf=\\\"settings.currency == 'USD'\\\" class=\\\"primary-color price\\\">\\r\\n                            <span *ngIf=\\\"property?.priceDollar.sale\\\">{{property?.priceDollar.sale | currency : 'USD' : 'symbol' : '1.0'}}</span>\\r\\n                            <span *ngIf=\\\"property?.priceDollar.rent\\\">{{property?.priceDollar.rent | currency : 'USD' : 'symbol' : '1.0'}} /month</span>\\r\\n                        </h2>\\r\\n                        <h2 *ngIf=\\\"settings.currency == 'EUR'\\\" class=\\\"primary-color price\\\">\\r\\n                            <span *ngIf=\\\"property?.priceEuro.sale\\\">{{property?.priceEuro.sale | currency : 'EUR' : 'symbol' : '1.0'}}</span>\\r\\n                            <span *ngIf=\\\"property?.priceEuro.rent\\\">{{property?.priceEuro.rent | currency : 'EUR' : 'symbol' : '1.0'}} /month</span>\\r\\n                        </h2>\\r\\n                        <app-rating [ratingsCount]=\\\"property?.ratingsCount\\\" [ratingsValue]=\\\"property?.ratingsValue\\\"></app-rating> \\r\\n                    </div>\\r\\n                    <button *ngIf=\\\"!sidenavOpen\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                    </button>                                  \\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\">\\r\\n                    <div class=\\\"main-carousel mb-3\\\"> \\r\\n                        <div *ngIf=\\\"property\\\" class=\\\"control-icons\\\">\\r\\n                            <button mat-button [disabled]=\\\"onFavorites()\\\" (click)=\\\"addToFavorites()\\\" matTooltip=\\\"Add To Favorite\\\">\\r\\n                                <mat-icon class=\\\"\\\">favorite_border</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-button [disabled]=\\\"onCompare()\\\" (click)=\\\"addToCompare()\\\" matTooltip=\\\"Add To Compare\\\">\\r\\n                                <mat-icon class=\\\"\\\">compare_arrows</mat-icon>\\r\\n                            </button>  \\r\\n                        </div>   \\r\\n                        <div id=\\\"main-carousel\\\" class=\\\"swiper-container\\\" [swiper]=\\\"config\\\" (indexChange)=\\\"onIndexChange($event)\\\"> \\r\\n                            <div class=\\\"swiper-wrapper\\\">      \\r\\n                                <div *ngFor=\\\"let image of property?.gallery\\\" class=\\\"swiper-slide\\\">\\r\\n                                    <img [attr.data-src]=\\\"image.big\\\" class=\\\"swiper-lazy\\\">\\r\\n                                    <div class=\\\"swiper-lazy-preloader\\\"></div>          \\r\\n                                </div>\\r\\n                            </div>                      \\r\\n                            <button mat-mini-fab color=\\\"primary\\\" class=\\\"swiper-button-prev swipe-arrow\\\"><mat-icon>keyboard_arrow_left</mat-icon></button>\\r\\n                            <button mat-mini-fab color=\\\"primary\\\" class=\\\"swiper-button-next swipe-arrow\\\"><mat-icon>keyboard_arrow_right</mat-icon></button> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"small-carousel\\\">   \\r\\n                        <div id=\\\"small-carousel\\\" class=\\\"swiper-container\\\" [swiper]=\\\"config2\\\"> \\r\\n                            <div class=\\\"swiper-wrapper\\\">      \\r\\n                                <div *ngFor=\\\"let image of property?.gallery; let i=index;\\\" class=\\\"swiper-slide\\\" [ngClass]=\\\"'thumb-'+i\\\" [class.active-thumb]=\\\"i == 0\\\">\\r\\n                                    <img [attr.data-src]=\\\"image.small\\\" class=\\\"swiper-lazy mw-100\\\" (click)=\\\"selectImage(i)\\\">\\r\\n                                    <div class=\\\"swiper-lazy-preloader\\\"></div>          \\r\\n                                </div>\\r\\n                            </div>  \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-card> \\r\\n                \\r\\n                \\r\\n                <mat-card *ngIf=\\\"property\\\" class=\\\"mt-3\\\">\\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Details</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <div fxLayout=\\\"row wrap\\\" class=\\\"details\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Property Type:</span>\\r\\n                            <span>{{property.propertyType}}</span>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Property Status:</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let status of property.propertyStatus; let last=last\\\" [class.list-item]=\\\"property.propertyStatus.length > 1\\\" [class.last]=\\\"last\\\">{{status}}</span>\\r\\n                            </div>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>City:</span>\\r\\n                            <span>{{property.city}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Zip Code:</span>\\r\\n                            <span>{{property.zipCode}}</span>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Neighborhood:</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let neighborhood of property.neighborhood; let last=last\\\" [class.list-item]=\\\"property.neighborhood.length > 1\\\" [class.last]=\\\"last\\\">{{neighborhood}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Street:</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let street of property.street; let last=last\\\" [class.list-item]=\\\"property.street.length > 1\\\" [class.last]=\\\"last\\\">{{street}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Bedrooms:</span>\\r\\n                            <span>{{property.bedrooms}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Bathrooms:</span>\\r\\n                            <span>{{property.bathrooms}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Garages:</span>\\r\\n                            <span>{{property.garages}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Property size:</span>\\r\\n                            <span>{{property.area.value}} {{property.area.unit}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Year Built:</span>\\r\\n                            <span>{{property.yearBuilt}}</span>\\r\\n                        </div>\\r\\n                    </div>   \\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Features</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div *ngFor=\\\"let feature of property?.features\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\">\\r\\n                                <mat-icon class=\\\"mat-icon-sm\\\" color=\\\"primary\\\">check</mat-icon>\\r\\n                                <span class=\\\"mx-2\\\">{{feature}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Additional features</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <div fxLayout=\\\"row wrap\\\" class=\\\"details\\\">\\r\\n                            <div *ngFor=\\\"let feature of property?.additionalFeatures\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"item\\\">\\r\\n                                <span>{{feature.name}}:</span>\\r\\n                                <span>{{feature.value}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Description</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <p>{{property?.desc}}</p>\\r\\n                        <p>{{property?.desc}}</p>\\r\\n                        <p>{{property?.desc}}</p>\\r\\n                    </mat-card-content>\\r\\n                </mat-card> \\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Location</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <agm-map [latitude]=\\\"property?.location.lat\\\" [longitude]=\\\"property?.location.lng\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\">\\r\\n                            <agm-marker [latitude]=\\\"property?.location.lat\\\" [longitude]=\\\"property?.location.lng\\\" [markerDraggable]=\\\"false\\\"></agm-marker>\\r\\n                        </agm-map>\\r\\n                    </mat-card-content>                   \\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Plans</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <mat-accordion>\\r\\n                            <mat-expansion-panel *ngFor=\\\"let plan of property?.plans; let i = index;\\\" [expanded]=\\\"i === 0\\\">\\r\\n                                <mat-expansion-panel-header>  \\r\\n                                    <mat-panel-title fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                                        <div class=\\\"fw-500\\\">{{plan.name}}</div>\\r\\n                                        <div fxShow=\\\"false\\\" fxShow.gt-xs=\\\"true\\\" class=\\\"text-muted\\\">\\r\\n                                            <span>Area: <span class=\\\"fw-500\\\">{{plan.area.value}} {{plan.area.unit}}</span></span>\\r\\n                                            <span class=\\\"mx-3\\\">Rooms: <span class=\\\"fw-500\\\">{{plan.rooms}}</span></span>\\r\\n                                            <span>Baths: <span class=\\\"fw-500\\\">{{plan.baths}}</span></span>   \\r\\n                                        </div>\\r\\n                                    </mat-panel-title> \\r\\n                                </mat-expansion-panel-header>                                  \\r\\n                                <img [src]=\\\"plan.image\\\" [alt]=\\\"plan.name\\\" class=\\\"mw-100\\\">\\r\\n                                <p>{{plan.desc}}</p>\\r\\n                            </mat-expansion-panel> \\r\\n                        </mat-accordion>                         \\r\\n                    </mat-card-content>\\r\\n                </mat-card> \\r\\n\\r\\n                <mat-card *ngIf=\\\"property\\\" class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Videos</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <mat-video [src]=\\\"property.videos[0].link\\\" [title]=\\\"property.videos[0].name\\\" [download]=\\\"true\\\" [keyboard]=\\\"false\\\"></mat-video>\\r\\n                        <div class=\\\"mt-5\\\">\\r\\n                            <h3 class=\\\"text-center fw-500\\\">{{property.videos[1].name}}</h3>\\r\\n                            <div [innerHtml]=\\\"embedVideo\\\" class=\\\"videoWrapper\\\"></div>                                    \\r\\n                        </div>                             \\r\\n                    </mat-card-content>\\r\\n                </mat-card>                \\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\"> \\r\\n                    <span>ID:<span class=\\\"fw-500 mx-2\\\">{{property?.id}}</span></span>\\r\\n                    <span>Published:<span class=\\\"fw-500 mx-2\\\">{{property?.published | date:\\\"dd MMMM, yyyy\\\"}}</span></span>\\r\\n                    <span>Last Update:<span class=\\\"fw-500 mx-2\\\">{{property?.lastUpdate | date:\\\"dd MMMM, yyyy\\\"}}</span></span>\\r\\n                    <span>Views:<span class=\\\"fw-500 mx-2\\\">{{property?.views}}</span></span> \\r\\n                </mat-card>\\r\\n\\r\\n                <app-comments *ngIf=\\\"property\\\" [propertyId]=\\\"property.id\\\"></app-comments>  \\r\\n\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n \\r\\n<div class=\\\"section mt-3\\\">\\r\\n    <div class=\\\"px-3\\\">\\r\\n        <div class=\\\"theme-container\\\"> \\r\\n            <h1 class=\\\"section-title\\\">Related properties</h1>            \\r\\n            <app-properties-carousel [properties]=\\\"relatedProperties\\\"></app-properties-carousel>                        \\r\\n        </div>\\r\\n    </div>   \\r\\n</div> \\r\\n\\r\\n<app-get-in-touch></app-get-in-touch>\"","module.exports = \"agm-map {\\n  height: 100vh;\\n  width: 100%;\\n}\\n\\n.block {\\n  justify-content: center;\\n  align-items: center;\\n  display: flex;\\n  width: 50px;\\n  height: 50px;\\n  background-color: blue;\\n}\\n\\n#scrollEnabling {\\n  position: absolute;\\n  top: 20px;\\n  right: 20px;\\n  z-index: 999;\\n  font-size: 13px;\\n  line-height: 36px;\\n}\\n\\n.fixed {\\n  position: fixed;\\n  height: 100%;\\n  width: 100%;\\n  z-index: 9999;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9tYXAvQzpcXFVzZXJzXFx1c2VyXFxEb2N1bWVudHNcXGdpdGh1YlxcYWxtYWNlbmVzLWFuZ3VsYXIvc3JjXFxhcHBcXHBhZ2VzXFxwcm9wZXJ0aWVzXFxtYXBcXG1hcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9tYXAvbWFwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFdBQUE7QUNDSjs7QURDQTtFQUNJLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtBQ0VKOztBREFBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNHSjs7QUREQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUNJSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb3BlcnRpZXMvbWFwL21hcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5ibG9jayB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6Y2VudGVyO1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgd2lkdGg6NTBweDtcclxuICAgIGhlaWdodDo1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjpibHVlO1xyXG59XHJcbiNzY3JvbGxFbmFibGluZ3tcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMjBweDtcclxuICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgei1pbmRleDogOTk5O1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDM2cHg7XHJcbn1cclxuLmZpeGVke1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIHotaW5kZXg6IDk5OTk7XHJcbn0iLCJhZ20tbWFwIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5ibG9jayB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xufVxuXG4jc2Nyb2xsRW5hYmxpbmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjBweDtcbiAgcmlnaHQ6IDIwcHg7XG4gIHotaW5kZXg6IDk5OTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMzZweDtcbn1cblxuLmZpeGVkIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiA5OTk5O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MapaService } from 'src/app/mapa.service';\r\nimport { conexion } from '../../../../global'\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss']\r\n})\r\n\r\nexport class MapComponent implements OnInit {\r\n  lat: any\r\n  lng: any\r\n  map: any\r\n  zoom: number = 13\r\n  search: boolean = false\r\n  conexion: string = conexion\r\n  distance: any = 2.5;\r\n  maxLng: any\r\n  minLng: any\r\n  maxLat: any\r\n  minLat: any\r\n  i:number=0\r\n  almacenes: Array<any> = []\r\n  openedWindow: number = 0\r\n  color: string = 'secondary'\r\n  resta: number\r\n  constructor(private mapaService: MapaService) {\r\n    var location: any = this.mapaService.getUnaVez()\r\n    this.recenterMap(location.lat, location.lng)\r\n    this.mapaService.getLatLng().subscribe(respuesta => {\r\n      this.lat = respuesta.lat\r\n      this.lng = respuesta.lng\r\n    })\r\n  }\r\n  doSomething(e) {\r\n    console.log(e)\r\n  }\r\n  doSomething2(e) {\r\n    if (this.zoom >= 13) {\r\n      this.resta = 0.015\r\n    } else {\r\n      this.resta = 0\r\n    }\r\n    if(this.i==0){\r\n      this.busqueda(e)\r\n      this.i++\r\n    }\r\n    if (this.search) {\r\n      this.busqueda(e)\r\n    }\r\n  }\r\n  busqueda(e) {\r\n    this.minLng = e.ka.g + this.resta\r\n    this.maxLng = e.ka.h - this.resta\r\n    this.minLat = e.oa.g + this.resta\r\n    this.maxLat = e.oa.h - this.resta\r\n    // console.log('maxLat=> ' + this.maxLat)\r\n    // console.log('minLat=> ' + this.minLat)\r\n    // console.log('maxLng=> ' + this.maxLng)\r\n    // console.log('minLng=> ' + this.minLng)\r\n    fetch(`${this.conexion}/api/instalaciones/bounds/${this.maxLng}/${this.minLng}/${this.maxLat}/${this.minLat}`)\r\n      .then(response => {\r\n        return response.json()\r\n      }).then(respuesta => {\r\n        console.log(respuesta)\r\n        this.almacenes=[]\r\n        this.almacenes = respuesta.content\r\n        this.mapaService.setProperties(respuesta.content)\r\n      })\r\n  }\r\n  openWindow(id) {\r\n    let l = this.almacenes.find(almacen => almacen.idInstalacion == id);\r\n    // console.log(l)\r\n    this.lat = +l.latitudInstalacion + 0.038;\r\n    this.lng = +l.longitudInstalacion;\r\n    this.openedWindow = id;\r\n  }\r\n  isInfoWindowOpen(id) {\r\n    return this.openedWindow == id;\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n  recenterMap(lat, lng) {\r\n    this.lat = lat;\r\n    this.lng = lng;\r\n    // console.log(lat, lng)\r\n  }\r\n  updateMapCenter() {\r\n    this.lat = this.map.center.lat(),\r\n      this.lng = this.map.center.lng()\r\n    this.mapaService.setLatLng(this.map.center.lat(), this.map.center.lng())\r\n    if (this.search == true) {\r\n      fetch(`${this.conexion}/api/instalaciones/${this.lat}/${this.lng}/${this.distance}`).then(response => {\r\n        return response.json()\r\n      }).then(almacenes => { })\r\n    }\r\n  }\r\n  enable() {\r\n    if (this.search == false) {\r\n      this.search = true\r\n      this.color = 'primary'\r\n    } else {\r\n      this.search = false\r\n      this.color = 'secondary'\r\n    }\r\n    console.log(this.search)\r\n  }\r\n}\r\n","module.exports = \"#mapa {\\n  position: fixed;\\n  height: 100%;\\n  width: 100%;\\n  z-index: 9999;\\n  top: 100%;\\n}\\n\\n#mapa.show {\\n  top: 0%;\\n}\\n\\n#regresar {\\n  display: none;\\n  position: fixed;\\n  top: 20px;\\n  left: 20px;\\n  z-index: 99999;\\n  font-size: 13px;\\n  line-height: 36px;\\n}\\n\\n#regresar.block {\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9DOlxcVXNlcnNcXHVzZXJcXERvY3VtZW50c1xcZ2l0aHViXFxhbG1hY2VuZXMtYW5ndWxhci9zcmNcXGFwcFxccGFnZXNcXHByb3BlcnRpZXNcXHByb3BlcnRpZXMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Byb3BlcnRpZXMvcHJvcGVydGllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSxTQUFBO0FDQ0o7O0FER0E7RUFDSSxPQUFBO0FDQUo7O0FERUE7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQ0NKOztBRENBO0VBQ0ksY0FBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9wcm9wZXJ0aWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI21hcGF7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgei1pbmRleDogOTk5OTtcclxuICAgIHRvcDogMTAwJVxyXG4gICAgLy8gdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xyXG4gICAgLy8gdHJhbnNpdGlvbjogMnM7XHJcbn1cclxuI21hcGEuc2hvd3tcclxuICAgIHRvcDowJVxyXG59XHJcbiNyZWdyZXNhcntcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDIwcHg7XHJcbiAgICBsZWZ0OiAyMHB4O1xyXG4gICAgei1pbmRleDogOTk5OTk7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzZweDtcclxufVxyXG4jcmVncmVzYXIuYmxvY2t7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufSIsIiNtYXBhIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiA5OTk5O1xuICB0b3A6IDEwMCU7XG59XG5cbiNtYXBhLnNob3cge1xuICB0b3A6IDAlO1xufVxuXG4jcmVncmVzYXIge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMjBweDtcbiAgei1pbmRleDogOTk5OTk7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDM2cHg7XG59XG5cbiNyZWdyZXNhci5ibG9jayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { Settings, AppSettings } from '../../app.settings';\r\nimport { AppService } from '../../app.service';\r\nimport { Property, Pagination, Almacen } from '../../app.models';\r\nimport { MapaService } from 'src/app/mapa.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-properties',\r\n  templateUrl: './properties.component.html',\r\n  styleUrls: ['./properties.component.scss']\r\n})\r\nexport class PropertiesComponent implements OnInit {\r\n  showable: boolean = false\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;\r\n  public sidenavOpen: boolean = true;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation: true\r\n  };\r\n  public properties: Property[];\r\n  public almacenes: Almacen[];\r\n  public viewType: string = 'grid';\r\n  public viewCol: number = 33.3;\r\n  public count: number = 12;\r\n  public sort: string;\r\n  public searchFields: any;\r\n  public removedSearchField: string;\r\n  public pagination: Pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n  public message: string;\r\n  public watcher: Subscription;\r\n\r\n  public settings: Settings\r\n  constructor(public appSettings: AppSettings, public appService: AppService, public mediaObserver: MediaObserver,\r\n    private mapaService: MapaService) {\r\n    this.settings = this.appSettings.settings;\r\n    this.watcher = mediaObserver.media$.subscribe((change: MediaChange) => {\r\n      if (change.mqAlias == 'xs') {\r\n        this.sidenavOpen = false;\r\n        this.viewCol = 100;\r\n      }\r\n      else if (change.mqAlias == 'sm') {\r\n        this.sidenavOpen = false;\r\n        this.viewCol = 50;\r\n      }\r\n      else if (change.mqAlias == 'md') {\r\n        this.viewCol = 50;\r\n        this.sidenavOpen = true;\r\n      }\r\n      else {\r\n        this.viewCol = 33.3;\r\n        this.sidenavOpen = true;\r\n      }\r\n    });\r\n\r\n  }\r\n  mapa() {\r\n    if (this.showable == false) {\r\n      this.showable = true\r\n    } else {\r\n      this.showable = false\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.getProperties();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.watcher.unsubscribe();\r\n  }\r\n\r\n  public getProperties() {\r\n    // this.appService.getProperties().subscribe(data => {\r\n    //   let result = this.filterData(data);\r\n    //   if (result.data.length == 0) {\r\n    //     this.properties.length = 0;\r\n    //     this.pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n    //     this.message = 'No Results Found';\r\n    //     return false;\r\n    //   }\r\n    //   this.properties = result.data;\r\n    //   this.pagination = result.pagination;\r\n    //   this.message = null;\r\n    //   // console.log(this.properties)\r\n    // })\r\n    this.mapaService.getPropeties().subscribe(data => {\r\n      let result = this.filterData(data);\r\n      console.log(result)\r\n      if (result.data.length == 0) {\r\n        this.almacenes.length = 0;\r\n        this.pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n        this.message = 'No Results Found';\r\n        return false;\r\n      }\r\n      // console.log(result.data)\r\n      this.almacenes=[]\r\n      this.almacenes = result.data;\r\n      this.pagination = result.pagination;\r\n      this.message = null;\r\n      console.log(this.almacenes)\r\n    })\r\n  }\r\n\r\n  public resetPagination() {\r\n    if (this.paginator) {\r\n      this.paginator.pageIndex = 0;\r\n    }\r\n    this.pagination = new Pagination(1, this.count, null, null, this.pagination.total, this.pagination.totalPages);\r\n  }\r\n\r\n  public filterData(data) {\r\n    return this.appService.filterData(data, this.searchFields, this.sort, this.pagination.page, this.pagination.perPage);\r\n  }\r\n\r\n  public searchClicked() {\r\n    this.properties.length = 0;\r\n    this.getProperties();\r\n    window.scrollTo(0, 0);\r\n  }\r\n  public searchChanged(event) {\r\n    event.valueChanges.subscribe(() => {\r\n      this.resetPagination();\r\n      this.searchFields = event.value;\r\n      setTimeout(() => {\r\n        this.removedSearchField = null;\r\n      });\r\n      if (!this.settings.searchOnBtnClick) {\r\n        this.properties.length = 0;\r\n      }\r\n    });\r\n    event.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(() => {\r\n      if (!this.settings.searchOnBtnClick) {\r\n        this.getProperties();\r\n      }\r\n    });\r\n  }\r\n  public removeSearchField(field) {\r\n    this.message = null;\r\n    this.removedSearchField = field;\r\n  }\r\n\r\n\r\n  public changeCount(count) {\r\n    this.count = count;\r\n    this.properties.length = 0;\r\n    this.resetPagination();\r\n    this.getProperties();\r\n  }\r\n  public changeSorting(sort) {\r\n    this.sort = sort;\r\n    this.properties.length = 0;\r\n    this.getProperties();\r\n  }\r\n  public changeViewType(obj) {\r\n    this.viewType = obj.viewType;\r\n    this.viewCol = obj.viewCol;\r\n  }\r\n\r\n\r\n  public onPageChange(e) {\r\n    this.pagination.page = e.pageIndex + 1;\r\n    this.getProperties();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from '@agm/core'; \r\nimport { MatVideoModule } from 'mat-video';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PropertiesComponent } from './properties.component';\r\nimport { PropertyComponent } from './property/property.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport {AgmOverlays} from 'agm-overlays'\r\n\r\nexport const routes = [\r\n  { path: '', component: PropertiesComponent, pathMatch: 'full' },\r\n  { path: 'map',component:MapComponent},\r\n  { path: ':id', component: PropertyComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PropertiesComponent, \r\n    PropertyComponent,\r\n    MapComponent\r\n  ],\r\n  exports: [\r\n    PropertiesComponent, \r\n    MapComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AgmCoreModule,\r\n    MatVideoModule,\r\n    SharedModule,\r\n    AgmOverlays,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyBfl5JsPWncvaMJd0icji5e0huUNWh2aEo',\r\n      libraries: [\"places\"]\r\n    }),\r\n  ]\r\n})\r\nexport class PropertiesModule { }\r\n","module.exports = \".main-carousel .swiper-slide {\\n  text-align: center;\\n  padding-bottom: 66.25%;\\n  position: relative;\\n  overflow: hidden;\\n  background: rgba(0, 0, 0, 0.04);\\n}\\n.main-carousel img {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: auto;\\n  max-width: 100%;\\n}\\n.main-carousel .control-icons {\\n  position: absolute;\\n  z-index: 2;\\n  top: 24px;\\n  right: 20px;\\n}\\n.main-carousel .control-icons button.mat-button {\\n  min-width: 36px;\\n  width: 36px;\\n  padding: 0;\\n  margin: 0 4px;\\n  background: rgba(255, 252, 252, 0.6);\\n  transition: 0.2s;\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n.main-carousel .control-icons button.mat-button:disabled {\\n  color: rgba(0, 0, 0, 0.26);\\n}\\n.main-carousel .control-icons button.mat-button:hover:enabled {\\n  background: #fffcfc;\\n}\\n.small-carousel .swiper-slide img {\\n  display: block;\\n  opacity: 0.3;\\n}\\n.small-carousel .swiper-slide.active-thumb img {\\n  border-width: 3px;\\n  border-style: solid;\\n  box-sizing: border-box;\\n  opacity: 1;\\n}\\n.small-carousel .swiper-slide .swiper-lazy-preloader {\\n  margin-top: 10px;\\n}\\n.widget {\\n  margin-bottom: 40px;\\n}\\n.widget .widget-title {\\n  margin: 0 -16px 16px;\\n  padding: 8px 16px;\\n  text-transform: uppercase;\\n  font-weight: 500;\\n}\\n.widget:first-child .widget-title {\\n  margin: -16px -16px 16px;\\n  padding: 8px 16px;\\n  text-transform: uppercase;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9wcm9wZXJ0eS9DOlxcVXNlcnNcXHVzZXJcXERvY3VtZW50c1xcZ2l0aHViXFxhbG1hY2VuZXMtYW5ndWxhci9zcmNcXGFwcFxccGFnZXNcXHByb3BlcnRpZXNcXHByb3BlcnR5XFxwcm9wZXJ0eS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGFnZXMvcHJvcGVydGllcy9wcm9wZXJ0eS9wcm9wZXJ0eS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsK0JBQUE7QUNBUjtBREVJO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQ0FSO0FERUk7RUFDSSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtBQ0FSO0FEQ1E7RUFDSSxlQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSxnQkFBQTtFQUNBLDBCQUFBO0FDQ1o7QURBWTtFQUNJLDBCQUFBO0FDRWhCO0FEQVk7RUFDSSxtQkFBQTtBQ0VoQjtBREtRO0VBQ0ksY0FBQTtFQUNBLFlBQUE7QUNGWjtBREtZO0VBQ0ksaUJBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsVUFBQTtBQ0hoQjtBRE1RO0VBQ0ksZ0JBQUE7QUNKWjtBRFNBO0VBQ0ksbUJBQUE7QUNOSjtBRE9JO0VBQ0ksb0JBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7QUNMUjtBRFFRO0VBQ0ksd0JBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7QUNOWiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb3BlcnRpZXMvcHJvcGVydHkvcHJvcGVydHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFpbi1jYXJvdXNlbHsgXHJcbiAgICAuc3dpcGVyLXNsaWRleyAgICAgICAgICAgICAgXHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA2Ni4yNSU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47ICBcclxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDQpOyAgICAgICAgIFxyXG4gICAgfVxyXG4gICAgaW1ne1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgfSBcclxuICAgIC5jb250cm9sLWljb25zeyBcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgei1pbmRleDogMjsgXHJcbiAgICAgICAgdG9wOiAyNHB4O1xyXG4gICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGJ1dHRvbi5tYXQtYnV0dG9ue1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDM2cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzNnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgNHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjUyLCAyNTIsIDAuNik7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDAuMnM7IFxyXG4gICAgICAgICAgICBjb2xvcjpyZ2JhKDAsIDAsIDAsIDAuODcpO1xyXG4gICAgICAgICAgICAmOmRpc2FibGVke1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6aG92ZXI6ZW5hYmxlZHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTIsIDI1MiwgMSk7XHJcbiAgICAgICAgICAgIH0gICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5zbWFsbC1jYXJvdXNlbHsgXHJcbiAgICAuc3dpcGVyLXNsaWRleyAgXHJcbiAgICAgICAgaW1ne1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgb3BhY2l0eTogMC4zO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmFjdGl2ZS10aHVtYntcclxuICAgICAgICAgICAgaW1neyBcclxuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogM3B4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9ICAgICAgICAgICBcclxuICAgICAgICB9IFxyXG4gICAgICAgIC5zd2lwZXItbGF6eS1wcmVsb2FkZXJ7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgfSAgICAgICAgXHJcbiAgICB9IFxyXG59XHJcbiBcclxuLndpZGdldHsgXHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgLndpZGdldC10aXRsZXtcclxuICAgICAgICBtYXJnaW46IDAgLTE2cHggMTZweDtcclxuICAgICAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB9XHJcbiAgICAmOmZpcnN0LWNoaWxkeyAgXHJcbiAgICAgICAgLndpZGdldC10aXRsZXtcclxuICAgICAgICAgICAgbWFyZ2luOiAtMTZweCAtMTZweCAxNnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICB9XHJcbiAgICB9IFxyXG59ICIsIi5tYWluLWNhcm91c2VsIC5zd2lwZXItc2xpZGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmctYm90dG9tOiA2Ni4yNSU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA0KTtcbn1cbi5tYWluLWNhcm91c2VsIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4ubWFpbi1jYXJvdXNlbCAuY29udHJvbC1pY29ucyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgdG9wOiAyNHB4O1xuICByaWdodDogMjBweDtcbn1cbi5tYWluLWNhcm91c2VsIC5jb250cm9sLWljb25zIGJ1dHRvbi5tYXQtYnV0dG9uIHtcbiAgbWluLXdpZHRoOiAzNnB4O1xuICB3aWR0aDogMzZweDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIDRweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1MiwgMjUyLCAwLjYpO1xuICB0cmFuc2l0aW9uOiAwLjJzO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbn1cbi5tYWluLWNhcm91c2VsIC5jb250cm9sLWljb25zIGJ1dHRvbi5tYXQtYnV0dG9uOmRpc2FibGVkIHtcbiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yNik7XG59XG4ubWFpbi1jYXJvdXNlbCAuY29udHJvbC1pY29ucyBidXR0b24ubWF0LWJ1dHRvbjpob3ZlcjplbmFibGVkIHtcbiAgYmFja2dyb3VuZDogI2ZmZmNmYztcbn1cblxuLnNtYWxsLWNhcm91c2VsIC5zd2lwZXItc2xpZGUgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9wYWNpdHk6IDAuMztcbn1cbi5zbWFsbC1jYXJvdXNlbCAuc3dpcGVyLXNsaWRlLmFjdGl2ZS10aHVtYiBpbWcge1xuICBib3JkZXItd2lkdGg6IDNweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3BhY2l0eTogMTtcbn1cbi5zbWFsbC1jYXJvdXNlbCAuc3dpcGVyLXNsaWRlIC5zd2lwZXItbGF6eS1wcmVsb2FkZXIge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4ud2lkZ2V0IHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cbi53aWRnZXQgLndpZGdldC10aXRsZSB7XG4gIG1hcmdpbjogMCAtMTZweCAxNnB4O1xuICBwYWRkaW5nOiA4cHggMTZweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cbi53aWRnZXQ6Zmlyc3QtY2hpbGQgLndpZGdldC10aXRsZSB7XG4gIG1hcmdpbjogLTE2cHggLTE2cHggMTZweDtcbiAgcGFkZGluZzogOHB4IDE2cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59Il19 */\"","import { Component, OnInit, ViewChild, HostListener, ViewChildren, QueryList } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property } from 'src/app/app.models';\r\nimport { SwiperConfigInterface, SwiperDirective } from 'ngx-swiper-wrapper';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { CompareOverviewComponent } from 'src/app/shared/compare-overview/compare-overview.component';\r\nimport { EmbedVideoService } from 'ngx-embed-video'; \r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-property',\r\n  templateUrl: './property.component.html',\r\n  styleUrls: ['./property.component.scss']\r\n})\r\nexport class PropertyComponent implements OnInit {\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;  \r\n  @ViewChildren(SwiperDirective) swipers: QueryList<SwiperDirective>;\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation:true\r\n  };\r\n  public sidenavOpen:boolean = true;\r\n  public config: SwiperConfigInterface = {}; \r\n  public config2: SwiperConfigInterface = {}; \r\n  private sub: any;\r\n  public property:Property; \r\n  public settings: Settings;  \r\n  public embedVideo: any;\r\n  public relatedProperties: Property[];\r\n  public featuredProperties: Property[];\r\n  public agent:any;\r\n  public mortgageForm: FormGroup;\r\n  public monthlyPayment:any;\r\n  public contactForm: FormGroup;\r\n  constructor(public appSettings:AppSettings, \r\n              public appService:AppService, \r\n              private activatedRoute: ActivatedRoute, \r\n              private embedService: EmbedVideoService,\r\n              public fb: FormBuilder) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.activatedRoute.params.subscribe(params => {   \r\n      this.getPropertyById(params['id']); \r\n    });\r\n    this.getRelatedProperties();\r\n    this.getFeaturedProperties();\r\n    this.getAgent(1);\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n      this.sidenav.close();\r\n    };\r\n    this.mortgageForm = this.fb.group({\r\n      principalAmount: ['', Validators.required],\r\n      downPayment: ['', Validators.required], \r\n      interestRate: ['', Validators.required],\r\n      period: ['', Validators.required]\r\n    });\r\n    this.contactForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      phone: ['', Validators.required],\r\n      message: ['', Validators.required]\r\n    });\r\n  } \r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }  \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true; \r\n  }\r\n\r\n  public getPropertyById(id){\r\n    this.appService.getPropertyById(id).subscribe(data=>{\r\n      this.property = data;  \r\n      this.embedVideo = this.embedService.embed(this.property.videos[1].link);\r\n      setTimeout(() => { \r\n        this.config.observer = true;\r\n        this.config2.observer = true; \r\n        this.swipers.forEach(swiper => { \r\n          if(swiper){\r\n            swiper.setIndex(0);\r\n          } \r\n        }); \r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.config = {\r\n      observer: false,\r\n      slidesPerView: 1,\r\n      spaceBetween: 0,       \r\n      keyboard: true,\r\n      navigation: true,\r\n      pagination: false,\r\n      grabCursor: true,        \r\n      loop: false,\r\n      preloadImages: false,\r\n      lazy: true,\r\n      autoplay: {\r\n        delay: 5000,\r\n        disableOnInteraction: false\r\n      }\r\n    };\r\n\r\n    this.config2 = {\r\n      observer: false,\r\n      slidesPerView: 4,\r\n      spaceBetween: 16,      \r\n      keyboard: true,\r\n      navigation: false,\r\n      pagination: false, \r\n      grabCursor: true,       \r\n      loop: false, \r\n      preloadImages: false,\r\n      lazy: true,  \r\n      breakpoints: {\r\n        480: {\r\n          slidesPerView: 2\r\n        },\r\n        600: {\r\n          slidesPerView: 3,\r\n        }\r\n      }\r\n    } \r\n\r\n  }\r\n  \r\n\r\n  public onOpenedChange(){ \r\n    this.swipers.forEach(swiper => { \r\n      if(swiper){\r\n        swiper.update();\r\n      } \r\n    });     \r\n  }\r\n\r\n  public selectImage(index:number){ \r\n    this.swipers.forEach(swiper => {\r\n      if(swiper['elementRef'].nativeElement.id == 'main-carousel'){\r\n        swiper.setIndex(index);\r\n      }      \r\n    }); \r\n  }\r\n\r\n  public onIndexChange(index: number) {  \r\n    this.swipers.forEach(swiper => { \r\n      let elem = swiper['elementRef'].nativeElement;\r\n      if(elem.id == 'small-carousel'){\r\n        swiper.setIndex(index);  \r\n        for (let i = 0; i < elem.children[0].children.length; i++) {\r\n          const element = elem.children[0].children[i]; \r\n          if(element.classList.contains('thumb-'+index)){\r\n            element.classList.add('active-thumb'); \r\n          }\r\n          else{\r\n            element.classList.remove('active-thumb'); \r\n          }\r\n        }\r\n      } \r\n    });     \r\n  }\r\n\r\n  public addToCompare(){\r\n    this.appService.addToCompare(this.property, CompareOverviewComponent, (this.settings.rtl) ? 'rtl':'ltr'); \r\n  }\r\n\r\n  public onCompare(){\r\n    return this.appService.Data.compareList.filter(item=>item.id == this.property.id)[0];\r\n  }\r\n\r\n  public addToFavorites(){\r\n    this.appService.addToFavorites(this.property, (this.settings.rtl) ? 'rtl':'ltr');\r\n  }\r\n\r\n  public onFavorites(){\r\n    return this.appService.Data.favorites.filter(item=>item.id == this.property.id)[0];\r\n  }\r\n\r\n  public getRelatedProperties(){\r\n    this.appService.getRelatedProperties().subscribe(properties=>{\r\n      this.relatedProperties = properties;\r\n    })\r\n  }\r\n\r\n  public getFeaturedProperties(){\r\n    this.appService.getFeaturedProperties().subscribe(properties=>{\r\n      this.featuredProperties = properties.slice(0,3); \r\n    })\r\n  } \r\n\r\n  public getAgent(agentId:number = 1){\r\n    var ids = [1,2,3,4,5]; //agent ids \r\n    agentId = ids[Math.floor(Math.random()*ids.length)]; //random agent id\r\n    this.agent = this.appService.getAgents().filter(agent=> agent.id == agentId)[0]; \r\n  }\r\n\r\n  public onContactFormSubmit(values:Object){\r\n    if (this.contactForm.valid) { \r\n      console.log(values);\r\n    } \r\n  }\r\n\r\n  public onMortgageFormSubmit(values:Object){ \r\n    if (this.mortgageForm.valid) { \r\n      var principalAmount = values['principalAmount']\r\n      var down = values['downPayment']\r\n      var interest = values['interestRate']\r\n      var term = values['period']\r\n      this.monthlyPayment = this.calculateMortgage(principalAmount, down, interest / 100 / 12, term * 12).toFixed(2);\r\n    }     \r\n  }\r\n  public calculateMortgage(principalAmount:any, downPayment:any, interestRate:any, period:any){    \r\n    return ((principalAmount-downPayment) * interestRate) / (1 - Math.pow(1 + interestRate, -period));\r\n  } \r\n\r\n}","// export const conexion:string = 'http://localhost:3700'\r\nexport const conexion:string = 'https://almacenes-back.herokuapp.com'"],"sourceRoot":"webpack:///"}